#pragma once
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Cmdline:
        sokol-shdc --input shaders/light.glsl --output shaders/light.glsl.h --format sokol --slang glsl410

    Overview:
    =========
    Shader program: 'light':
        Get shader desc: light_shader_desc(sg_query_backend());
        Vertex Shader: vs
        Fragment Shader: fs
        Attributes:
            ATTR_light_vert_position => 0
    Bindings:
        Uniform block 'vs_params':
            C struct: vs_params_t
            Bind slot: UB_vs_params => 0
        Uniform block 'voxel_data':
            C struct: voxel_data_t
            Bind slot: UB_voxel_data => 2
        Uniform block 'light_data':
            C struct: light_data_t
            Bind slot: UB_light_data => 1
        Image 'v_texture':
            Image type: SG_IMAGETYPE_2D
            Sample type: SG_IMAGESAMPLETYPE_FLOAT
            Multisampled: false
            Bind slot: IMG_v_texture => 3
        Sampler 'smp':
            Type: SG_SAMPLERTYPE_FILTERING
            Bind slot: SMP_smp => 3
*/
#if !defined(SOKOL_GFX_INCLUDED)
#error "Please include sokol_gfx.h before light.glsl.h"
#endif
#if !defined(SOKOL_SHDC_ALIGN)
#if defined(_MSC_VER)
#define SOKOL_SHDC_ALIGN(a) __declspec(align(a))
#else
#define SOKOL_SHDC_ALIGN(a) __attribute__((aligned(a)))
#endif
#endif
#define ATTR_light_vert_position (0)
#define UB_vs_params (0)
#define UB_voxel_data (2)
#define UB_light_data (1)
#define IMG_v_texture (3)
#define SMP_smp (3)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct vs_params_t {
    mat4x4 model;
    mat4x4 view;
    mat4x4 proj;
    mat4x4 mvp;
    vec3 position;
    uint8_t _pad_268[4];
    vec3 target;
    uint8_t _pad_284[4];
    vec3 up;
    uint8_t _pad_300[4];
    vec3 front;
    uint8_t _pad_316[4];
    vec3 right;
    float aspect;
} vs_params_t;
#pragma pack(pop)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct voxel_data_t {
    float voxel_info[300][4];
    int num_voxels;
    uint8_t _pad_4804[12];
} voxel_data_t;
#pragma pack(pop)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct light_data_t {
    float light_positions[300][4];
    float light_colors[300][4];
    int num_lights;
    uint8_t _pad_9604[12];
} light_data_t;
#pragma pack(pop)
/*
    #version 410

    uniform vec4 vs_params[21];
    layout(location = 0) in vec4 vert_position;
    layout(location = 0) out vec3 ray_origin;
    layout(location = 1) out vec3 ray_dir;

    void main()
    {
        gl_Position = vert_position;
        ray_origin = vs_params[16].xyz;
        ray_dir = normalize((vs_params[19].xyz + ((vs_params[20].xyz * (vert_position.x * 0.57735025882720947265625)) * vs_params[20].w)) + (vs_params[18].xyz * (vert_position.y * 0.57735025882720947265625)));
    }

*/
static const uint8_t vs_source_glsl410[461] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x31,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x32,0x31,0x5d,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,
    0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,
    0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x65,0x72,0x74,0x5f,0x70,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,
    0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,
    0x65,0x63,0x33,0x20,0x72,0x61,0x79,0x5f,0x6f,0x72,0x69,0x67,0x69,0x6e,0x3b,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x31,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x72,0x61,
    0x79,0x5f,0x64,0x69,0x72,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,
    0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x76,0x65,0x72,0x74,0x5f,0x70,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x61,0x79,0x5f,0x6f,
    0x72,0x69,0x67,0x69,0x6e,0x20,0x3d,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x31,0x36,0x5d,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,
    0x61,0x79,0x5f,0x64,0x69,0x72,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,
    0x7a,0x65,0x28,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x39,
    0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2b,0x20,0x28,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x32,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x28,0x76,
    0x65,0x72,0x74,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2e,0x78,0x20,0x2a,
    0x20,0x30,0x2e,0x35,0x37,0x37,0x33,0x35,0x30,0x32,0x35,0x38,0x38,0x32,0x37,0x32,
    0x30,0x39,0x34,0x37,0x32,0x36,0x35,0x36,0x32,0x35,0x29,0x29,0x20,0x2a,0x20,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x30,0x5d,0x2e,0x77,0x29,0x29,
    0x20,0x2b,0x20,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x38,
    0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x28,0x76,0x65,0x72,0x74,0x5f,0x70,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x2e,0x79,0x20,0x2a,0x20,0x30,0x2e,0x35,0x37,0x37,
    0x33,0x35,0x30,0x32,0x35,0x38,0x38,0x32,0x37,0x32,0x30,0x39,0x34,0x37,0x32,0x36,
    0x35,0x36,0x32,0x35,0x29,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 410

    struct HitInfo
    {
        float t;
        vec3 position;
        vec3 normal;
        int voxel_id;
    };

    struct voxel_data
    {
        vec4 voxel_info[300];
        int num_voxels;
    };

    uniform voxel_data _65;

    struct light_data
    {
        vec4 light_positions[300];
        vec4 light_colors[300];
        int num_lights;
    };

    uniform light_data _461;

    uniform sampler2D v_texture_smp;

    layout(location = 0) in vec3 ray_origin;
    layout(location = 1) in vec3 ray_dir;
    layout(location = 0) out vec4 frag_color;

    bool is_visible(vec3 pos, vec3 norm)
    {
        vec3 _50 = pos + (norm * 1.0);
        for (int i = 0; i < _65.num_voxels; i++)
        {
            if (all(equal(_65.voxel_info[i].xyz, _50)))
            {
                return false;
            }
        }
        return true;
    }

    bool intersect_voxel(vec3 origin, vec3 dir, vec4 voxel, inout HitInfo hit)
    {
        vec3 _103 = vec3(voxel.w * 0.5);
        vec3 _104 = voxel.xyz - _103;
        vec3 _109 = voxel.xyz + _103;
        float _113 = _104.x;
        float _119 = (_113 - origin.x) / dir.x;
        float tmin = _119;
        float _122 = _109.x;
        float _128 = (_122 - origin.x) / dir.x;
        float tmax = _128;
        if (_119 > _128)
        {
            float _135 = tmin;
            tmin = tmax;
            tmax = _135;
        }
        float _141 = _104.y;
        float _147 = (_141 - origin.y) / dir.y;
        float tymin = _147;
        float _150 = _109.y;
        float _156 = (_150 - origin.y) / dir.y;
        float tymax = _156;
        if (_147 > _156)
        {
            float _163 = tymin;
            tymin = tymax;
            tymax = _163;
        }
        if ((tmin > tymax) || (tymin > tmax))
        {
            return false;
        }
        if (tymin > tmin)
        {
            tmin = tymin;
        }
        if (tymax < tmax)
        {
            tmax = tymax;
        }
        float _191 = _104.z;
        float _197 = (_191 - origin.z) / dir.z;
        float tzmin = _197;
        float _206 = (_109.z - origin.z) / dir.z;
        float tzmax = _206;
        if (_197 > _206)
        {
            float _213 = tzmin;
            tzmin = tzmax;
            tzmax = _213;
        }
        if ((tmin > tzmax) || (tzmin > tmax))
        {
            return false;
        }
        if (tzmin > tmin)
        {
            tmin = tzmin;
        }
        if (tzmax < tmax)
        {
            tmax = tzmax;
        }
        if (tmin < 0.0)
        {
            if (tmax < 0.0)
            {
                return false;
            }
            tmin = tmax;
        }
        hit.t = tmin;
        hit.position = origin + (dir * tmin);
        vec3 _259 = hit.position;
        if (abs(_259.x - _113) < 9.9999997473787516355514526367188e-05)
        {
            hit.normal = vec3(-1.0, 0.0, 0.0);
        }
        else
        {
            if (abs(_259.x - _122) < 9.9999997473787516355514526367188e-05)
            {
                hit.normal = vec3(1.0, 0.0, 0.0);
            }
            else
            {
                if (abs(_259.y - _141) < 9.9999997473787516355514526367188e-05)
                {
                    hit.normal = vec3(0.0, -1.0, 0.0);
                }
                else
                {
                    if (abs(_259.y - _150) < 9.9999997473787516355514526367188e-05)
                    {
                        hit.normal = vec3(0.0, 1.0, 0.0);
                    }
                    else
                    {
                        if (abs(_259.z - _191) < 9.9999997473787516355514526367188e-05)
                        {
                            hit.normal = vec3(0.0, 0.0, -1.0);
                        }
                        else
                        {
                            hit.normal = vec3(0.0, 0.0, 1.0);
                        }
                    }
                }
            }
        }
        vec3 param = voxel.xyz;
        vec3 param_1 = hit.normal;
        if (!is_visible(param, param_1))
        {
            return false;
        }
        return true;
    }

    HitInfo closest_hit(vec3 origin, vec3 dir)
    {
        float _728 = 100000002004087734272.0;
        int _731 = -1;
        HitInfo param_3;
        vec3 _729;
        vec3 _730;
        for (int i = 0; i < _65.num_voxels; i++)
        {
            vec3 param = origin;
            vec3 param_1 = dir;
            vec4 param_2 = _65.voxel_info[i];
            bool _370 = intersect_voxel(param, param_1, param_2, param_3);
            if (_370)
            {
                if (param_3.t < _728)
                {
                    _728 = param_3.t;
                    _729 = param_3.position;
                    _730 = param_3.normal;
                    _731 = i;
                }
            }
        }
        return HitInfo(_728, _729, _730, _731);
    }

    bool any_intersection(vec3 origin, vec3 dir, float max_t)
    {
        HitInfo param_3;
        for (int i = 0; i < _65.num_voxels; i++)
        {
            if ((_65.voxel_info[i].x - origin.x) > 2.0)
            {
                break;
            }
            vec3 param = origin;
            vec3 param_1 = dir;
            vec4 param_2 = _65.voxel_info[i];
            bool _421 = intersect_voxel(param, param_1, param_2, param_3);
            if (_421)
            {
                bool _428 = param_3.t < max_t;
                bool _434;
                if (_428)
                {
                    _434 = param_3.t > 9.9999997473787516355514526367188e-05;
                }
                else
                {
                    _434 = _428;
                }
                if (_434)
                {
                    return true;
                }
            }
        }
        return false;
    }

    vec3 compute_lighting(HitInfo hit, inout bool is_shadow)
    {
        vec3 color = vec3(0.0);
        for (int i = 0; i < _461.num_lights; i++)
        {
            vec3 _482 = _461.light_positions[i].xyz - hit.position;
            float _485 = length(_482);
            if (_485 > 100.0)
            {
                continue;
            }
            vec3 _497 = normalize(_482);
            vec3 param = hit.position + (hit.normal * 9.9999997473787516355514526367188e-05);
            vec3 param_1 = _497;
            float param_2 = _485;
            if (!any_intersection(param, param_1, param_2))
            {
                color += (_461.light_colors[i].xyz * (max(dot(hit.normal, _497), 0.0) * _461.light_positions[i].w));
                is_shadow = false;
            }
            else
            {
                is_shadow = true;
            }
        }
        return color;
    }

    void main()
    {
        vec3 final_color = vec3(0.0);
        vec3 throughput = vec3(1.0);
        vec3 origin = ray_origin;
        vec3 dir = ray_dir;
        vec2 tex_coords;
        bool param_3;
        for (int bounce = 0; bounce < 1; bounce++)
        {
            vec3 param = origin;
            vec3 param_1 = dir;
            HitInfo _557 = closest_hit(param, param_1);
            vec3 _712 = _557.position;
            vec3 _713 = _557.normal;
            int _714 = _557.voxel_id;
            if (_714 == (-1))
            {
                break;
            }
            vec3 _575 = vec3(_65.voxel_info[_714].w * 0.5);
            vec3 _576 = _65.voxel_info[_714].xyz - _575;
            vec3 _584 = _65.voxel_info[_714].xyz + _575;
            if (abs(_713.x) > 0.89999997615814208984375)
            {
                vec2 _602 = _576.zy;
                tex_coords = (vec2(_712.zy) - _602) / (_584.zy - _602);
            }
            else
            {
                if (abs(_713.y) > 0.89999997615814208984375)
                {
                    vec2 _624 = _576.xz;
                    tex_coords = (vec2(_712.xz) - _624) / (_584.xz - _624);
                }
                else
                {
                    vec2 _640 = _576.xy;
                    tex_coords = (vec2(_712.xy) - _640) / (_584.xy - _640);
                }
            }
            HitInfo param_2 = _557;
            vec3 _666 = compute_lighting(param_2, param_3);
            vec3 _668 = throughput;
            final_color = fma(_668 * _666, texture(v_texture_smp, tex_coords).xyz, final_color);
            origin = _712 + (_713 * 9.9999997473787516355514526367188e-05);
            dir = reflect(dir, _713);
            vec3 _687 = _668 * 0.100000001490116119384765625;
            throughput = _687;
            if ((length(_687) < 0.00999999977648258209228515625) && (bounce > 1))
            {
                break;
            }
        }
        frag_color = vec4(final_color, 1.0);
    }

*/
static const uint8_t fs_source_glsl410[7621] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x31,0x30,0x0a,0x0a,0x73,0x74,
    0x72,0x75,0x63,0x74,0x20,0x48,0x69,0x74,0x49,0x6e,0x66,0x6f,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x76,0x65,0x63,0x33,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x76,0x6f,0x78,0x65,0x6c,0x5f,0x69,0x64,
    0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x76,0x6f,0x78,
    0x65,0x6c,0x5f,0x64,0x61,0x74,0x61,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,
    0x63,0x34,0x20,0x76,0x6f,0x78,0x65,0x6c,0x5f,0x69,0x6e,0x66,0x6f,0x5b,0x33,0x30,
    0x30,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x6e,0x75,0x6d,0x5f,
    0x76,0x6f,0x78,0x65,0x6c,0x73,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,
    0x6f,0x72,0x6d,0x20,0x76,0x6f,0x78,0x65,0x6c,0x5f,0x64,0x61,0x74,0x61,0x20,0x5f,
    0x36,0x35,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6c,0x69,0x67,0x68,
    0x74,0x5f,0x64,0x61,0x74,0x61,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,
    0x34,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x73,0x5b,0x33,0x30,0x30,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,
    0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x73,0x5b,0x33,0x30,
    0x30,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x6e,0x75,0x6d,0x5f,
    0x6c,0x69,0x67,0x68,0x74,0x73,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,
    0x6f,0x72,0x6d,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x64,0x61,0x74,0x61,0x20,0x5f,
    0x34,0x36,0x31,0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,
    0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x76,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,
    0x65,0x5f,0x73,0x6d,0x70,0x3b,0x0a,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,
    0x76,0x65,0x63,0x33,0x20,0x72,0x61,0x79,0x5f,0x6f,0x72,0x69,0x67,0x69,0x6e,0x3b,
    0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x72,0x61,
    0x79,0x5f,0x64,0x69,0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,
    0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,
    0x76,0x65,0x63,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,
    0x0a,0x0a,0x62,0x6f,0x6f,0x6c,0x20,0x69,0x73,0x5f,0x76,0x69,0x73,0x69,0x62,0x6c,
    0x65,0x28,0x76,0x65,0x63,0x33,0x20,0x70,0x6f,0x73,0x2c,0x20,0x76,0x65,0x63,0x33,
    0x20,0x6e,0x6f,0x72,0x6d,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,
    0x33,0x20,0x5f,0x35,0x30,0x20,0x3d,0x20,0x70,0x6f,0x73,0x20,0x2b,0x20,0x28,0x6e,
    0x6f,0x72,0x6d,0x20,0x2a,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6f,0x72,0x20,0x28,0x69,0x6e,0x74,0x20,0x69,0x20,0x3d,0x20,0x30,0x3b,0x20,
    0x69,0x20,0x3c,0x20,0x5f,0x36,0x35,0x2e,0x6e,0x75,0x6d,0x5f,0x76,0x6f,0x78,0x65,
    0x6c,0x73,0x3b,0x20,0x69,0x2b,0x2b,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x61,0x6c,0x6c,0x28,0x65,
    0x71,0x75,0x61,0x6c,0x28,0x5f,0x36,0x35,0x2e,0x76,0x6f,0x78,0x65,0x6c,0x5f,0x69,
    0x6e,0x66,0x6f,0x5b,0x69,0x5d,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x5f,0x35,0x30,0x29,
    0x29,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,
    0x66,0x61,0x6c,0x73,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,
    0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,
    0x6e,0x20,0x74,0x72,0x75,0x65,0x3b,0x0a,0x7d,0x0a,0x0a,0x62,0x6f,0x6f,0x6c,0x20,
    0x69,0x6e,0x74,0x65,0x72,0x73,0x65,0x63,0x74,0x5f,0x76,0x6f,0x78,0x65,0x6c,0x28,
    0x76,0x65,0x63,0x33,0x20,0x6f,0x72,0x69,0x67,0x69,0x6e,0x2c,0x20,0x76,0x65,0x63,
    0x33,0x20,0x64,0x69,0x72,0x2c,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x6f,0x78,0x65,
    0x6c,0x2c,0x20,0x69,0x6e,0x6f,0x75,0x74,0x20,0x48,0x69,0x74,0x49,0x6e,0x66,0x6f,
    0x20,0x68,0x69,0x74,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,
    0x20,0x5f,0x31,0x30,0x33,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x76,0x6f,0x78,
    0x65,0x6c,0x2e,0x77,0x20,0x2a,0x20,0x30,0x2e,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x31,0x30,0x34,0x20,0x3d,0x20,0x76,0x6f,0x78,
    0x65,0x6c,0x2e,0x78,0x79,0x7a,0x20,0x2d,0x20,0x5f,0x31,0x30,0x33,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x31,0x30,0x39,0x20,0x3d,0x20,0x76,
    0x6f,0x78,0x65,0x6c,0x2e,0x78,0x79,0x7a,0x20,0x2b,0x20,0x5f,0x31,0x30,0x33,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x31,0x33,0x20,
    0x3d,0x20,0x5f,0x31,0x30,0x34,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x5f,0x31,0x31,0x39,0x20,0x3d,0x20,0x28,0x5f,0x31,0x31,0x33,
    0x20,0x2d,0x20,0x6f,0x72,0x69,0x67,0x69,0x6e,0x2e,0x78,0x29,0x20,0x2f,0x20,0x64,
    0x69,0x72,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x74,0x6d,0x69,0x6e,0x20,0x3d,0x20,0x5f,0x31,0x31,0x39,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x32,0x32,0x20,0x3d,0x20,0x5f,0x31,
    0x30,0x39,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x5f,0x31,0x32,0x38,0x20,0x3d,0x20,0x28,0x5f,0x31,0x32,0x32,0x20,0x2d,0x20,0x6f,
    0x72,0x69,0x67,0x69,0x6e,0x2e,0x78,0x29,0x20,0x2f,0x20,0x64,0x69,0x72,0x2e,0x78,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x74,0x6d,0x61,0x78,
    0x20,0x3d,0x20,0x5f,0x31,0x32,0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,
    0x28,0x5f,0x31,0x31,0x39,0x20,0x3e,0x20,0x5f,0x31,0x32,0x38,0x29,0x0a,0x20,0x20,
    0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x5f,0x31,0x33,0x35,0x20,0x3d,0x20,0x74,0x6d,0x69,0x6e,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x74,0x6d,0x69,0x6e,0x20,0x3d,0x20,0x74,0x6d,
    0x61,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x74,0x6d,0x61,0x78,
    0x20,0x3d,0x20,0x5f,0x31,0x33,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x34,0x31,0x20,0x3d,0x20,
    0x5f,0x31,0x30,0x34,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x5f,0x31,0x34,0x37,0x20,0x3d,0x20,0x28,0x5f,0x31,0x34,0x31,0x20,0x2d,
    0x20,0x6f,0x72,0x69,0x67,0x69,0x6e,0x2e,0x79,0x29,0x20,0x2f,0x20,0x64,0x69,0x72,
    0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x74,0x79,
    0x6d,0x69,0x6e,0x20,0x3d,0x20,0x5f,0x31,0x34,0x37,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x35,0x30,0x20,0x3d,0x20,0x5f,0x31,0x30,
    0x39,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,
    0x31,0x35,0x36,0x20,0x3d,0x20,0x28,0x5f,0x31,0x35,0x30,0x20,0x2d,0x20,0x6f,0x72,
    0x69,0x67,0x69,0x6e,0x2e,0x79,0x29,0x20,0x2f,0x20,0x64,0x69,0x72,0x2e,0x79,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x74,0x79,0x6d,0x61,0x78,
    0x20,0x3d,0x20,0x5f,0x31,0x35,0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,
    0x28,0x5f,0x31,0x34,0x37,0x20,0x3e,0x20,0x5f,0x31,0x35,0x36,0x29,0x0a,0x20,0x20,
    0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x5f,0x31,0x36,0x33,0x20,0x3d,0x20,0x74,0x79,0x6d,0x69,0x6e,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x74,0x79,0x6d,0x69,0x6e,0x20,0x3d,0x20,
    0x74,0x79,0x6d,0x61,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x74,
    0x79,0x6d,0x61,0x78,0x20,0x3d,0x20,0x5f,0x31,0x36,0x33,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x28,0x74,0x6d,0x69,0x6e,
    0x20,0x3e,0x20,0x74,0x79,0x6d,0x61,0x78,0x29,0x20,0x7c,0x7c,0x20,0x28,0x74,0x79,
    0x6d,0x69,0x6e,0x20,0x3e,0x20,0x74,0x6d,0x61,0x78,0x29,0x29,0x0a,0x20,0x20,0x20,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,
    0x6e,0x20,0x66,0x61,0x6c,0x73,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,
    0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x74,0x79,0x6d,0x69,0x6e,0x20,0x3e,0x20,0x74,
    0x6d,0x69,0x6e,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x74,0x6d,0x69,0x6e,0x20,0x3d,0x20,0x74,0x79,0x6d,0x69,0x6e,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x74,
    0x79,0x6d,0x61,0x78,0x20,0x3c,0x20,0x74,0x6d,0x61,0x78,0x29,0x0a,0x20,0x20,0x20,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x74,0x6d,0x61,0x78,0x20,
    0x3d,0x20,0x74,0x79,0x6d,0x61,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x39,0x31,0x20,0x3d,0x20,
    0x5f,0x31,0x30,0x34,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x5f,0x31,0x39,0x37,0x20,0x3d,0x20,0x28,0x5f,0x31,0x39,0x31,0x20,0x2d,
    0x20,0x6f,0x72,0x69,0x67,0x69,0x6e,0x2e,0x7a,0x29,0x20,0x2f,0x20,0x64,0x69,0x72,
    0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x74,0x7a,
    0x6d,0x69,0x6e,0x20,0x3d,0x20,0x5f,0x31,0x39,0x37,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x30,0x36,0x20,0x3d,0x20,0x28,0x5f,0x31,
    0x30,0x39,0x2e,0x7a,0x20,0x2d,0x20,0x6f,0x72,0x69,0x67,0x69,0x6e,0x2e,0x7a,0x29,
    0x20,0x2f,0x20,0x64,0x69,0x72,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x74,0x7a,0x6d,0x61,0x78,0x20,0x3d,0x20,0x5f,0x32,0x30,0x36,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x31,0x39,0x37,0x20,0x3e,
    0x20,0x5f,0x32,0x30,0x36,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x31,0x33,0x20,
    0x3d,0x20,0x74,0x7a,0x6d,0x69,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x74,0x7a,0x6d,0x69,0x6e,0x20,0x3d,0x20,0x74,0x7a,0x6d,0x61,0x78,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x74,0x7a,0x6d,0x61,0x78,0x20,0x3d,0x20,
    0x5f,0x32,0x31,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,
    0x69,0x66,0x20,0x28,0x28,0x74,0x6d,0x69,0x6e,0x20,0x3e,0x20,0x74,0x7a,0x6d,0x61,
    0x78,0x29,0x20,0x7c,0x7c,0x20,0x28,0x74,0x7a,0x6d,0x69,0x6e,0x20,0x3e,0x20,0x74,
    0x6d,0x61,0x78,0x29,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x66,0x61,0x6c,0x73,0x65,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,
    0x74,0x7a,0x6d,0x69,0x6e,0x20,0x3e,0x20,0x74,0x6d,0x69,0x6e,0x29,0x0a,0x20,0x20,
    0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x74,0x6d,0x69,0x6e,
    0x20,0x3d,0x20,0x74,0x7a,0x6d,0x69,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,
    0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x74,0x7a,0x6d,0x61,0x78,0x20,0x3c,0x20,
    0x74,0x6d,0x61,0x78,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x74,0x6d,0x61,0x78,0x20,0x3d,0x20,0x74,0x7a,0x6d,0x61,0x78,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,
    0x74,0x6d,0x69,0x6e,0x20,0x3c,0x20,0x30,0x2e,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x74,0x6d,
    0x61,0x78,0x20,0x3c,0x20,0x30,0x2e,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x66,0x61,0x6c,0x73,0x65,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x74,0x6d,0x69,0x6e,0x20,0x3d,0x20,0x74,0x6d,0x61,0x78,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x74,0x2e,0x74,0x20,0x3d,0x20,0x74,
    0x6d,0x69,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x74,0x2e,0x70,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x6f,0x72,0x69,0x67,0x69,0x6e,0x20,0x2b,
    0x20,0x28,0x64,0x69,0x72,0x20,0x2a,0x20,0x74,0x6d,0x69,0x6e,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x32,0x35,0x39,0x20,0x3d,0x20,0x68,
    0x69,0x74,0x2e,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x69,0x66,0x20,0x28,0x61,0x62,0x73,0x28,0x5f,0x32,0x35,0x39,0x2e,0x78,0x20,
    0x2d,0x20,0x5f,0x31,0x31,0x33,0x29,0x20,0x3c,0x20,0x39,0x2e,0x39,0x39,0x39,0x39,
    0x39,0x39,0x37,0x34,0x37,0x33,0x37,0x38,0x37,0x35,0x31,0x36,0x33,0x35,0x35,0x35,
    0x31,0x34,0x35,0x32,0x36,0x33,0x36,0x37,0x31,0x38,0x38,0x65,0x2d,0x30,0x35,0x29,
    0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,
    0x69,0x74,0x2e,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,
    0x28,0x2d,0x31,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,
    0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,
    0x66,0x20,0x28,0x61,0x62,0x73,0x28,0x5f,0x32,0x35,0x39,0x2e,0x78,0x20,0x2d,0x20,
    0x5f,0x31,0x32,0x32,0x29,0x20,0x3c,0x20,0x39,0x2e,0x39,0x39,0x39,0x39,0x39,0x39,
    0x37,0x34,0x37,0x33,0x37,0x38,0x37,0x35,0x31,0x36,0x33,0x35,0x35,0x35,0x31,0x34,
    0x35,0x32,0x36,0x33,0x36,0x37,0x31,0x38,0x38,0x65,0x2d,0x30,0x35,0x29,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x74,0x2e,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,
    0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x31,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x2c,
    0x20,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x61,0x62,0x73,0x28,0x5f,0x32,0x35,0x39,
    0x2e,0x79,0x20,0x2d,0x20,0x5f,0x31,0x34,0x31,0x29,0x20,0x3c,0x20,0x39,0x2e,0x39,
    0x39,0x39,0x39,0x39,0x39,0x37,0x34,0x37,0x33,0x37,0x38,0x37,0x35,0x31,0x36,0x33,
    0x35,0x35,0x35,0x31,0x34,0x35,0x32,0x36,0x33,0x36,0x37,0x31,0x38,0x38,0x65,0x2d,
    0x30,0x35,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x68,0x69,0x74,0x2e,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x76,
    0x65,0x63,0x33,0x28,0x30,0x2e,0x30,0x2c,0x20,0x2d,0x31,0x2e,0x30,0x2c,0x20,0x30,
    0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x65,
    0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x69,0x66,0x20,0x28,0x61,0x62,0x73,0x28,0x5f,0x32,0x35,0x39,0x2e,0x79,
    0x20,0x2d,0x20,0x5f,0x31,0x35,0x30,0x29,0x20,0x3c,0x20,0x39,0x2e,0x39,0x39,0x39,
    0x39,0x39,0x39,0x37,0x34,0x37,0x33,0x37,0x38,0x37,0x35,0x31,0x36,0x33,0x35,0x35,
    0x35,0x31,0x34,0x35,0x32,0x36,0x33,0x36,0x37,0x31,0x38,0x38,0x65,0x2d,0x30,0x35,
    0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x74,0x2e,0x6e,0x6f,0x72,0x6d,
    0x61,0x6c,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,0x2c,0x20,0x31,
    0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x61,0x62,0x73,0x28,0x5f,
    0x32,0x35,0x39,0x2e,0x7a,0x20,0x2d,0x20,0x5f,0x31,0x39,0x31,0x29,0x20,0x3c,0x20,
    0x39,0x2e,0x39,0x39,0x39,0x39,0x39,0x39,0x37,0x34,0x37,0x33,0x37,0x38,0x37,0x35,
    0x31,0x36,0x33,0x35,0x35,0x35,0x31,0x34,0x35,0x32,0x36,0x33,0x36,0x37,0x31,0x38,
    0x38,0x65,0x2d,0x30,0x35,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x74,0x2e,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,
    0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x2c,
    0x20,0x2d,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x74,0x2e,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,
    0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x2c,
    0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,
    0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x76,0x6f,
    0x78,0x65,0x6c,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,
    0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x68,0x69,0x74,0x2e,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,
    0x21,0x69,0x73,0x5f,0x76,0x69,0x73,0x69,0x62,0x6c,0x65,0x28,0x70,0x61,0x72,0x61,
    0x6d,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x29,0x29,0x0a,0x20,0x20,0x20,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,
    0x6e,0x20,0x66,0x61,0x6c,0x73,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,
    0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x74,0x72,0x75,0x65,0x3b,0x0a,
    0x7d,0x0a,0x0a,0x48,0x69,0x74,0x49,0x6e,0x66,0x6f,0x20,0x63,0x6c,0x6f,0x73,0x65,
    0x73,0x74,0x5f,0x68,0x69,0x74,0x28,0x76,0x65,0x63,0x33,0x20,0x6f,0x72,0x69,0x67,
    0x69,0x6e,0x2c,0x20,0x76,0x65,0x63,0x33,0x20,0x64,0x69,0x72,0x29,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x37,0x32,0x38,0x20,0x3d,
    0x20,0x31,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x32,0x30,0x30,0x34,0x30,0x38,0x37,
    0x37,0x33,0x34,0x32,0x37,0x32,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,
    0x74,0x20,0x5f,0x37,0x33,0x31,0x20,0x3d,0x20,0x2d,0x31,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x48,0x69,0x74,0x49,0x6e,0x66,0x6f,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x37,0x32,0x39,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x37,0x33,0x30,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x69,0x6e,0x74,0x20,0x69,0x20,0x3d,
    0x20,0x30,0x3b,0x20,0x69,0x20,0x3c,0x20,0x5f,0x36,0x35,0x2e,0x6e,0x75,0x6d,0x5f,
    0x76,0x6f,0x78,0x65,0x6c,0x73,0x3b,0x20,0x69,0x2b,0x2b,0x29,0x0a,0x20,0x20,0x20,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x6f,0x72,0x69,0x67,0x69,0x6e,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x64,0x69,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,
    0x20,0x3d,0x20,0x5f,0x36,0x35,0x2e,0x76,0x6f,0x78,0x65,0x6c,0x5f,0x69,0x6e,0x66,
    0x6f,0x5b,0x69,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x62,0x6f,
    0x6f,0x6c,0x20,0x5f,0x33,0x37,0x30,0x20,0x3d,0x20,0x69,0x6e,0x74,0x65,0x72,0x73,
    0x65,0x63,0x74,0x5f,0x76,0x6f,0x78,0x65,0x6c,0x28,0x70,0x61,0x72,0x61,0x6d,0x2c,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x32,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x33,0x37,0x30,0x29,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,
    0x2e,0x74,0x20,0x3c,0x20,0x5f,0x37,0x32,0x38,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x37,0x32,0x38,0x20,0x3d,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x2e,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x37,0x32,0x39,0x20,
    0x3d,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x2e,0x70,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x5f,0x37,0x33,0x30,0x20,0x3d,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x33,0x2e,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x37,0x33,0x31,0x20,
    0x3d,0x20,0x69,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x48,0x69,
    0x74,0x49,0x6e,0x66,0x6f,0x28,0x5f,0x37,0x32,0x38,0x2c,0x20,0x5f,0x37,0x32,0x39,
    0x2c,0x20,0x5f,0x37,0x33,0x30,0x2c,0x20,0x5f,0x37,0x33,0x31,0x29,0x3b,0x0a,0x7d,
    0x0a,0x0a,0x62,0x6f,0x6f,0x6c,0x20,0x61,0x6e,0x79,0x5f,0x69,0x6e,0x74,0x65,0x72,
    0x73,0x65,0x63,0x74,0x69,0x6f,0x6e,0x28,0x76,0x65,0x63,0x33,0x20,0x6f,0x72,0x69,
    0x67,0x69,0x6e,0x2c,0x20,0x76,0x65,0x63,0x33,0x20,0x64,0x69,0x72,0x2c,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x6d,0x61,0x78,0x5f,0x74,0x29,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x48,0x69,0x74,0x49,0x6e,0x66,0x6f,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x69,0x6e,0x74,0x20,
    0x69,0x20,0x3d,0x20,0x30,0x3b,0x20,0x69,0x20,0x3c,0x20,0x5f,0x36,0x35,0x2e,0x6e,
    0x75,0x6d,0x5f,0x76,0x6f,0x78,0x65,0x6c,0x73,0x3b,0x20,0x69,0x2b,0x2b,0x29,0x0a,
    0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,
    0x20,0x28,0x28,0x5f,0x36,0x35,0x2e,0x76,0x6f,0x78,0x65,0x6c,0x5f,0x69,0x6e,0x66,
    0x6f,0x5b,0x69,0x5d,0x2e,0x78,0x20,0x2d,0x20,0x6f,0x72,0x69,0x67,0x69,0x6e,0x2e,
    0x78,0x29,0x20,0x3e,0x20,0x32,0x2e,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x62,0x72,0x65,0x61,0x6b,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x20,0x3d,0x20,0x6f,0x72,0x69,0x67,0x69,0x6e,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x31,0x20,0x3d,0x20,0x64,0x69,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,
    0x20,0x5f,0x36,0x35,0x2e,0x76,0x6f,0x78,0x65,0x6c,0x5f,0x69,0x6e,0x66,0x6f,0x5b,
    0x69,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,
    0x20,0x5f,0x34,0x32,0x31,0x20,0x3d,0x20,0x69,0x6e,0x74,0x65,0x72,0x73,0x65,0x63,
    0x74,0x5f,0x76,0x6f,0x78,0x65,0x6c,0x28,0x70,0x61,0x72,0x61,0x6d,0x2c,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x2c,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x34,0x32,0x31,0x29,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x34,0x32,0x38,0x20,0x3d,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x33,0x2e,0x74,0x20,0x3c,0x20,0x6d,0x61,0x78,0x5f,0x74,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x62,0x6f,
    0x6f,0x6c,0x20,0x5f,0x34,0x33,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x34,0x32,0x38,0x29,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x34,0x33,
    0x34,0x20,0x3d,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x2e,0x74,0x20,0x3e,0x20,
    0x39,0x2e,0x39,0x39,0x39,0x39,0x39,0x39,0x37,0x34,0x37,0x33,0x37,0x38,0x37,0x35,
    0x31,0x36,0x33,0x35,0x35,0x35,0x31,0x34,0x35,0x32,0x36,0x33,0x36,0x37,0x31,0x38,
    0x38,0x65,0x2d,0x30,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x5f,0x34,0x33,0x34,0x20,0x3d,0x20,0x5f,0x34,0x32,0x38,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,
    0x34,0x33,0x34,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x74,0x72,0x75,0x65,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,
    0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x66,0x61,0x6c,0x73,0x65,0x3b,0x0a,
    0x7d,0x0a,0x0a,0x76,0x65,0x63,0x33,0x20,0x63,0x6f,0x6d,0x70,0x75,0x74,0x65,0x5f,
    0x6c,0x69,0x67,0x68,0x74,0x69,0x6e,0x67,0x28,0x48,0x69,0x74,0x49,0x6e,0x66,0x6f,
    0x20,0x68,0x69,0x74,0x2c,0x20,0x69,0x6e,0x6f,0x75,0x74,0x20,0x62,0x6f,0x6f,0x6c,
    0x20,0x69,0x73,0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,0x29,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,
    0x65,0x63,0x33,0x28,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6f,
    0x72,0x20,0x28,0x69,0x6e,0x74,0x20,0x69,0x20,0x3d,0x20,0x30,0x3b,0x20,0x69,0x20,
    0x3c,0x20,0x5f,0x34,0x36,0x31,0x2e,0x6e,0x75,0x6d,0x5f,0x6c,0x69,0x67,0x68,0x74,
    0x73,0x3b,0x20,0x69,0x2b,0x2b,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x34,0x38,0x32,0x20,
    0x3d,0x20,0x5f,0x34,0x36,0x31,0x2e,0x6c,0x69,0x67,0x68,0x74,0x5f,0x70,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x73,0x5b,0x69,0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2d,0x20,
    0x68,0x69,0x74,0x2e,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,0x38,0x35,
    0x20,0x3d,0x20,0x6c,0x65,0x6e,0x67,0x74,0x68,0x28,0x5f,0x34,0x38,0x32,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x34,0x38,
    0x35,0x20,0x3e,0x20,0x31,0x30,0x30,0x2e,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x63,0x6f,0x6e,0x74,0x69,0x6e,0x75,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,
    0x33,0x20,0x5f,0x34,0x39,0x37,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,
    0x7a,0x65,0x28,0x5f,0x34,0x38,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x68,
    0x69,0x74,0x2e,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x2b,0x20,0x28,0x68,
    0x69,0x74,0x2e,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x2a,0x20,0x39,0x2e,0x39,0x39,
    0x39,0x39,0x39,0x39,0x37,0x34,0x37,0x33,0x37,0x38,0x37,0x35,0x31,0x36,0x33,0x35,
    0x35,0x35,0x31,0x34,0x35,0x32,0x36,0x33,0x36,0x37,0x31,0x38,0x38,0x65,0x2d,0x30,
    0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x5f,0x34,0x39,0x37,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x5f,0x34,0x38,0x35,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x21,0x61,0x6e,0x79,0x5f,
    0x69,0x6e,0x74,0x65,0x72,0x73,0x65,0x63,0x74,0x69,0x6f,0x6e,0x28,0x70,0x61,0x72,
    0x61,0x6d,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x32,0x29,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,
    0x6f,0x72,0x20,0x2b,0x3d,0x20,0x28,0x5f,0x34,0x36,0x31,0x2e,0x6c,0x69,0x67,0x68,
    0x74,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x73,0x5b,0x69,0x5d,0x2e,0x78,0x79,0x7a,0x20,
    0x2a,0x20,0x28,0x6d,0x61,0x78,0x28,0x64,0x6f,0x74,0x28,0x68,0x69,0x74,0x2e,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x5f,0x34,0x39,0x37,0x29,0x2c,0x20,0x30,0x2e,
    0x30,0x29,0x20,0x2a,0x20,0x5f,0x34,0x36,0x31,0x2e,0x6c,0x69,0x67,0x68,0x74,0x5f,
    0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x73,0x5b,0x69,0x5d,0x2e,0x77,0x29,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x73,
    0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,0x20,0x3d,0x20,0x66,0x61,0x6c,0x73,0x65,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x73,
    0x5f,0x73,0x68,0x61,0x64,0x6f,0x77,0x20,0x3d,0x20,0x74,0x72,0x75,0x65,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,
    0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x63,0x6f,0x6c,0x6f,0x72,
    0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x66,0x69,0x6e,0x61,
    0x6c,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x30,
    0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x74,0x68,
    0x72,0x6f,0x75,0x67,0x68,0x70,0x75,0x74,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,
    0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x6f,
    0x72,0x69,0x67,0x69,0x6e,0x20,0x3d,0x20,0x72,0x61,0x79,0x5f,0x6f,0x72,0x69,0x67,
    0x69,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x64,0x69,0x72,
    0x20,0x3d,0x20,0x72,0x61,0x79,0x5f,0x64,0x69,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x76,0x65,0x63,0x32,0x20,0x74,0x65,0x78,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x73,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x69,0x6e,0x74,0x20,
    0x62,0x6f,0x75,0x6e,0x63,0x65,0x20,0x3d,0x20,0x30,0x3b,0x20,0x62,0x6f,0x75,0x6e,
    0x63,0x65,0x20,0x3c,0x20,0x31,0x3b,0x20,0x62,0x6f,0x75,0x6e,0x63,0x65,0x2b,0x2b,
    0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x6f,0x72,0x69,
    0x67,0x69,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,
    0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x64,0x69,0x72,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x48,0x69,0x74,0x49,0x6e,0x66,0x6f,
    0x20,0x5f,0x35,0x35,0x37,0x20,0x3d,0x20,0x63,0x6c,0x6f,0x73,0x65,0x73,0x74,0x5f,
    0x68,0x69,0x74,0x28,0x70,0x61,0x72,0x61,0x6d,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x31,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,
    0x33,0x20,0x5f,0x37,0x31,0x32,0x20,0x3d,0x20,0x5f,0x35,0x35,0x37,0x2e,0x70,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x76,0x65,0x63,0x33,0x20,0x5f,0x37,0x31,0x33,0x20,0x3d,0x20,0x5f,0x35,0x35,0x37,
    0x2e,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x69,0x6e,0x74,0x20,0x5f,0x37,0x31,0x34,0x20,0x3d,0x20,0x5f,0x35,0x35,0x37,
    0x2e,0x76,0x6f,0x78,0x65,0x6c,0x5f,0x69,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x37,0x31,0x34,0x20,0x3d,0x3d,0x20,0x28,
    0x2d,0x31,0x29,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x62,0x72,0x65,0x61,0x6b,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x35,0x37,0x35,0x20,0x3d,0x20,
    0x76,0x65,0x63,0x33,0x28,0x5f,0x36,0x35,0x2e,0x76,0x6f,0x78,0x65,0x6c,0x5f,0x69,
    0x6e,0x66,0x6f,0x5b,0x5f,0x37,0x31,0x34,0x5d,0x2e,0x77,0x20,0x2a,0x20,0x30,0x2e,
    0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,
    0x20,0x5f,0x35,0x37,0x36,0x20,0x3d,0x20,0x5f,0x36,0x35,0x2e,0x76,0x6f,0x78,0x65,
    0x6c,0x5f,0x69,0x6e,0x66,0x6f,0x5b,0x5f,0x37,0x31,0x34,0x5d,0x2e,0x78,0x79,0x7a,
    0x20,0x2d,0x20,0x5f,0x35,0x37,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x35,0x38,0x34,0x20,0x3d,0x20,0x5f,0x36,0x35,
    0x2e,0x76,0x6f,0x78,0x65,0x6c,0x5f,0x69,0x6e,0x66,0x6f,0x5b,0x5f,0x37,0x31,0x34,
    0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2b,0x20,0x5f,0x35,0x37,0x35,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x61,0x62,0x73,0x28,0x5f,0x37,
    0x31,0x33,0x2e,0x78,0x29,0x20,0x3e,0x20,0x30,0x2e,0x38,0x39,0x39,0x39,0x39,0x39,
    0x39,0x37,0x36,0x31,0x35,0x38,0x31,0x34,0x32,0x30,0x38,0x39,0x38,0x34,0x33,0x37,
    0x35,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x36,
    0x30,0x32,0x20,0x3d,0x20,0x5f,0x35,0x37,0x36,0x2e,0x7a,0x79,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x74,0x65,0x78,0x5f,0x63,0x6f,
    0x6f,0x72,0x64,0x73,0x20,0x3d,0x20,0x28,0x76,0x65,0x63,0x32,0x28,0x5f,0x37,0x31,
    0x32,0x2e,0x7a,0x79,0x29,0x20,0x2d,0x20,0x5f,0x36,0x30,0x32,0x29,0x20,0x2f,0x20,
    0x28,0x5f,0x35,0x38,0x34,0x2e,0x7a,0x79,0x20,0x2d,0x20,0x5f,0x36,0x30,0x32,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,
    0x66,0x20,0x28,0x61,0x62,0x73,0x28,0x5f,0x37,0x31,0x33,0x2e,0x79,0x29,0x20,0x3e,
    0x20,0x30,0x2e,0x38,0x39,0x39,0x39,0x39,0x39,0x39,0x37,0x36,0x31,0x35,0x38,0x31,
    0x34,0x32,0x30,0x38,0x39,0x38,0x34,0x33,0x37,0x35,0x29,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,
    0x36,0x32,0x34,0x20,0x3d,0x20,0x5f,0x35,0x37,0x36,0x2e,0x78,0x7a,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x74,
    0x65,0x78,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x73,0x20,0x3d,0x20,0x28,0x76,0x65,0x63,
    0x32,0x28,0x5f,0x37,0x31,0x32,0x2e,0x78,0x7a,0x29,0x20,0x2d,0x20,0x5f,0x36,0x32,
    0x34,0x29,0x20,0x2f,0x20,0x28,0x5f,0x35,0x38,0x34,0x2e,0x78,0x7a,0x20,0x2d,0x20,
    0x5f,0x36,0x32,0x34,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x36,0x34,0x30,0x20,0x3d,0x20,
    0x5f,0x35,0x37,0x36,0x2e,0x78,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x74,0x65,0x78,0x5f,0x63,0x6f,0x6f,
    0x72,0x64,0x73,0x20,0x3d,0x20,0x28,0x76,0x65,0x63,0x32,0x28,0x5f,0x37,0x31,0x32,
    0x2e,0x78,0x79,0x29,0x20,0x2d,0x20,0x5f,0x36,0x34,0x30,0x29,0x20,0x2f,0x20,0x28,
    0x5f,0x35,0x38,0x34,0x2e,0x78,0x79,0x20,0x2d,0x20,0x5f,0x36,0x34,0x30,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x48,0x69,0x74,0x49,0x6e,0x66,0x6f,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,
    0x20,0x3d,0x20,0x5f,0x35,0x35,0x37,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x36,0x36,0x36,0x20,0x3d,0x20,0x63,0x6f,0x6d,
    0x70,0x75,0x74,0x65,0x5f,0x6c,0x69,0x67,0x68,0x74,0x69,0x6e,0x67,0x28,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x32,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x36,
    0x36,0x38,0x20,0x3d,0x20,0x74,0x68,0x72,0x6f,0x75,0x67,0x68,0x70,0x75,0x74,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x69,0x6e,0x61,0x6c,0x5f,0x63,
    0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,0x6d,0x61,0x28,0x5f,0x36,0x36,0x38,0x20,
    0x2a,0x20,0x5f,0x36,0x36,0x36,0x2c,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,
    0x76,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x6d,0x70,0x2c,0x20,0x74,
    0x65,0x78,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x73,0x29,0x2e,0x78,0x79,0x7a,0x2c,0x20,
    0x66,0x69,0x6e,0x61,0x6c,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x6f,0x72,0x69,0x67,0x69,0x6e,0x20,0x3d,0x20,0x5f,
    0x37,0x31,0x32,0x20,0x2b,0x20,0x28,0x5f,0x37,0x31,0x33,0x20,0x2a,0x20,0x39,0x2e,
    0x39,0x39,0x39,0x39,0x39,0x39,0x37,0x34,0x37,0x33,0x37,0x38,0x37,0x35,0x31,0x36,
    0x33,0x35,0x35,0x35,0x31,0x34,0x35,0x32,0x36,0x33,0x36,0x37,0x31,0x38,0x38,0x65,
    0x2d,0x30,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x64,0x69,
    0x72,0x20,0x3d,0x20,0x72,0x65,0x66,0x6c,0x65,0x63,0x74,0x28,0x64,0x69,0x72,0x2c,
    0x20,0x5f,0x37,0x31,0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x76,0x65,0x63,0x33,0x20,0x5f,0x36,0x38,0x37,0x20,0x3d,0x20,0x5f,0x36,0x36,0x38,
    0x20,0x2a,0x20,0x30,0x2e,0x31,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x31,0x34,0x39,
    0x30,0x31,0x31,0x36,0x31,0x31,0x39,0x33,0x38,0x34,0x37,0x36,0x35,0x36,0x32,0x35,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x74,0x68,0x72,0x6f,0x75,0x67,
    0x68,0x70,0x75,0x74,0x20,0x3d,0x20,0x5f,0x36,0x38,0x37,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x28,0x6c,0x65,0x6e,0x67,0x74,0x68,
    0x28,0x5f,0x36,0x38,0x37,0x29,0x20,0x3c,0x20,0x30,0x2e,0x30,0x30,0x39,0x39,0x39,
    0x39,0x39,0x39,0x39,0x37,0x37,0x36,0x34,0x38,0x32,0x35,0x38,0x32,0x30,0x39,0x32,
    0x32,0x38,0x35,0x31,0x35,0x36,0x32,0x35,0x29,0x20,0x26,0x26,0x20,0x28,0x62,0x6f,
    0x75,0x6e,0x63,0x65,0x20,0x3e,0x20,0x31,0x29,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x62,0x72,0x65,0x61,0x6b,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x66,0x69,
    0x6e,0x61,0x6c,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,
    0x0a,0x7d,0x0a,0x0a,0x00,
};
static inline const sg_shader_desc* light_shader_desc(sg_backend backend) {
    if (backend == SG_BACKEND_GLCORE) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vertex_func.source = (const char*)vs_source_glsl410;
            desc.vertex_func.entry = "main";
            desc.fragment_func.source = (const char*)fs_source_glsl410;
            desc.fragment_func.entry = "main";
            desc.attrs[0].glsl_name = "vert_position";
            desc.uniform_blocks[0].stage = SG_SHADERSTAGE_VERTEX;
            desc.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[0].size = 336;
            desc.uniform_blocks[0].glsl_uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[0].glsl_uniforms[0].array_count = 21;
            desc.uniform_blocks[0].glsl_uniforms[0].glsl_name = "vs_params";
            desc.uniform_blocks[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.uniform_blocks[1].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[1].size = 9616;
            desc.uniform_blocks[1].glsl_uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[1].glsl_uniforms[0].array_count = 300;
            desc.uniform_blocks[1].glsl_uniforms[0].glsl_name = "_461.light_positions";
            desc.uniform_blocks[1].glsl_uniforms[1].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[1].glsl_uniforms[1].array_count = 300;
            desc.uniform_blocks[1].glsl_uniforms[1].glsl_name = "_461.light_colors";
            desc.uniform_blocks[1].glsl_uniforms[2].type = SG_UNIFORMTYPE_INT;
            desc.uniform_blocks[1].glsl_uniforms[2].array_count = 0;
            desc.uniform_blocks[1].glsl_uniforms[2].glsl_name = "_461.num_lights";
            desc.uniform_blocks[2].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.uniform_blocks[2].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[2].size = 4816;
            desc.uniform_blocks[2].glsl_uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[2].glsl_uniforms[0].array_count = 300;
            desc.uniform_blocks[2].glsl_uniforms[0].glsl_name = "_65.voxel_info";
            desc.uniform_blocks[2].glsl_uniforms[1].type = SG_UNIFORMTYPE_INT;
            desc.uniform_blocks[2].glsl_uniforms[1].array_count = 0;
            desc.uniform_blocks[2].glsl_uniforms[1].glsl_name = "_65.num_voxels";
            desc.images[3].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[3].image_type = SG_IMAGETYPE_2D;
            desc.images[3].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[3].multisampled = false;
            desc.samplers[3].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[3].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.image_sampler_pairs[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[0].image_slot = 3;
            desc.image_sampler_pairs[0].sampler_slot = 3;
            desc.image_sampler_pairs[0].glsl_name = "v_texture_smp";
            desc.label = "light_shader";
        }
        return &desc;
    }
    return 0;
}
