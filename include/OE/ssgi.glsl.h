#pragma once
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Cmdline:
        sokol-shdc --input shaders/ssgi.glsl --output include/OE/ssgi.glsl.h --format sokol --slang glsl410 --ifdef

    Overview:
    =========
    Shader program: 'OESSGI':
        Get shader desc: OESSGI_shader_desc(sg_query_backend());
        Vertex Shader: vs_OESSGI
        Fragment Shader: fs_OESSGI
        Attributes:
            ATTR_OESSGI_OESSGI_position => 0
            ATTR_OESSGI_OESSGI_texcoord => 1
    Bindings:
        Uniform block 'OESSGI_params':
            C struct: OESSGI_params_t
            Bind slot: UB_OESSGI_params => 4
        Texture 'OESSGI_texture':
            Image type: SG_IMAGETYPE_2D
            Sample type: SG_IMAGESAMPLETYPE_FLOAT
            Multisampled: false
            Bind slot: VIEW_OESSGI_texture => 0
        Texture 'OESSGI_ptexture':
            Image type: SG_IMAGETYPE_2D
            Sample type: SG_IMAGESAMPLETYPE_FLOAT
            Multisampled: false
            Bind slot: VIEW_OESSGI_ptexture => 3
        Texture 'OESSGI_ntexture':
            Image type: SG_IMAGETYPE_2D
            Sample type: SG_IMAGESAMPLETYPE_FLOAT
            Multisampled: false
            Bind slot: VIEW_OESSGI_ntexture => 2
        Sampler 'OESSGI_smp':
            Type: SG_SAMPLERTYPE_FILTERING
            Bind slot: SMP_OESSGI_smp => 0
*/
#if !defined(SOKOL_GFX_INCLUDED)
#error "Please include sokol_gfx.h before ssgi.glsl.h"
#endif
#if !defined(SOKOL_SHDC_ALIGN)
#if defined(_MSC_VER)
#define SOKOL_SHDC_ALIGN(a) __declspec(align(a))
#else
#define SOKOL_SHDC_ALIGN(a) __attribute__((aligned(a)))
#endif
#endif
#define ATTR_OESSGI_OESSGI_position (0)
#define ATTR_OESSGI_OESSGI_texcoord (1)
#define UB_OESSGI_params (4)
#define VIEW_OESSGI_texture (0)
#define VIEW_OESSGI_ptexture (3)
#define VIEW_OESSGI_ntexture (2)
#define SMP_OESSGI_smp (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct OESSGI_params_t {
    mat4x4 proj;
    int RAYS;
    int STEPS;
    uint8_t _pad_72[8];
} OESSGI_params_t;
#pragma pack(pop)
/*
    #version 410

    layout(location = 0) out vec2 uv;
    layout(location = 1) in vec2 OESSGI_texcoord;
    layout(location = 0) in vec2 OESSGI_position;

    void main()
    {
        uv = OESSGI_texcoord;
        gl_Position = vec4(OESSGI_position, 0.0, 1.0);
    }

*/
#if defined(SOKOL_GLCORE)
static const uint8_t vs_OESSGI_source_glsl410[236] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x31,0x30,0x0a,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x75,0x76,0x3b,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x4f,0x45,0x53,
    0x53,0x47,0x49,0x5f,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x4f,0x45,0x53,0x53,0x47,
    0x49,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x0a,0x76,0x6f,0x69,
    0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x75,
    0x76,0x20,0x3d,0x20,0x4f,0x45,0x53,0x53,0x47,0x49,0x5f,0x74,0x65,0x78,0x63,0x6f,
    0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x4f,0x45,0x53,0x53,
    0x47,0x49,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x30,0x2e,0x30,
    0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
#endif
/*
    #version 410

    struct OESSGI_params
    {
        mat4 proj;
        int RAYS;
        int STEPS;
    };

    uniform OESSGI_params _222;

    uniform sampler2D OESSGI_texture_OESSGI_smp;
    uniform sampler2D OESSGI_ptexture_OESSGI_smp;
    uniform sampler2D OESSGI_ntexture_OESSGI_smp;

    layout(location = 0) in vec2 uv;
    layout(location = 0) out vec4 frag_color;

    float QISQRT(float _x)
    {
        float _39 = uintBitsToFloat(1597463007u - (floatBitsToUint(_x) >> uint(1)));
        return _39 * (1.5 - (((0.5 * _x) * _39) * _39));
    }

    float QSQRT(float _x)
    {
        float param = _x;
        return _x * QISQRT(param);
    }

    uint pcg(uint v)
    {
        uint _65 = (v * 747796405u) + 2891336453u;
        uint _77 = ((_65 >> ((_65 >> 28u) + 4u)) ^ _65) * 277803737u;
        return (_77 >> 22u) ^ _77;
    }

    float getRandom(vec2 p)
    {
        uint param = uint(p.x);
        uint param_1 = pcg(param) + uint(p.y);
        return float(pcg(param_1)) * 2.3283064365386962890625e-10;
    }

    void main()
    {
        vec4 _122 = texture(OESSGI_texture_OESSGI_smp, uv);
        vec4 _130 = texture(OESSGI_ptexture_OESSGI_smp, uv);
        vec3 _131 = _130.xyz;
        float param = dot(_131, _131);
        if (QSQRT(param) < 0.001000000047497451305389404296875)
        {
            frag_color = vec4(_122.xyz, 1.0);
            return;
        }
        vec4 _157 = texture(OESSGI_ntexture_OESSGI_smp, uv);
        vec3 _162 = (_157.xyz * 2.0) - vec3(1.0);
        bvec3 _174 = bvec3(abs(_162.z) < 0.999000012874603271484375);
        vec3 _179 = cross(vec3(_174.x ? vec3(0.0, 0.0, 1.0).x : vec3(1.0, 0.0, 0.0).x, _174.y ? vec3(0.0, 0.0, 1.0).y : vec3(1.0, 0.0, 0.0).y, _174.z ? vec3(0.0, 0.0, 1.0).z : vec3(1.0, 0.0, 0.0).z), _162);
        mat3 _202 = mat3(_179, cross(_162, _179), _162);
        vec3 GI = vec3(0.0);
        vec2 param_1 = ((uv * _130.x) * _130.y) * _130.z;
        float _217 = getRandom(param_1);
        float _228 = 1.0 / float(_222.STEPS);
        int i = 0;
        int hits = 0;
        int _242;
        for (;;)
        {
            _242 = _222.RAYS;
            if (i < _242)
            {
                vec2 param_2 = vec2(float(i), _217);
                float _252 = 6.28318500518798828125 * getRandom(param_2);
                vec2 param_3 = vec2(_217, float(i));
                float _259 = getRandom(param_3);
                float _264 = 1.0 - (_259 * _259);
                float param_4 = _264;
                float _271 = _264 * QISQRT(param_4);
                vec3 _286 = _202 * vec3(cos(_252) * _271, sin(_252) * _271, _259);
                for (int j = 1; j <= _222.STEPS; j++)
                {
                    float _301 = float(j) * _228;
                    vec3 _309 = _131 + (_286 * (_301 * 0.25));
                    vec4 _320 = _222.proj * vec4(_309, 1.0);
                    vec2 _331 = ((_320.xy / vec2(_320.w)) * 0.5) + vec2(0.5);
                    bool _336 = any(lessThan(_331, vec2(0.0)));
                    bool _344;
                    if (!_336)
                    {
                        _344 = any(greaterThan(_331, vec2(1.0)));
                    }
                    else
                    {
                        _344 = _336;
                    }
                    if (_344)
                    {
                        continue;
                    }
                    vec4 _353 = texture(OESSGI_ptexture_OESSGI_smp, _331);
                    vec3 _354 = _353.xyz;
                    float param_5 = dot(_354, _354);
                    if (QSQRT(param_5) < 0.001000000047497451305389404296875)
                    {
                        continue;
                    }
                    if (_353.z < (_309.z - 0.0500000007450580596923828125))
                    {
                        GI += (texture(OESSGI_texture_OESSGI_smp, _331).xyz * (max(dot(_162, _286), 0.0) * (1.0 - _301)));
                        hits++;
                        break;
                    }
                }
                i++;
                continue;
            }
            else
            {
                break;
            }
        }
        vec3 _401 = GI;
        float _404 = float(_242);
        vec3 _407 = (_401 / vec3(_404)) * 2.0;
        GI = _407;
        frag_color = vec4((_122.xyz + _407) * (float(hits) / _404), 1.0);
    }

*/
#if defined(SOKOL_GLCORE)
static const uint8_t fs_OESSGI_source_glsl410[3922] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x31,0x30,0x0a,0x0a,0x73,0x74,
    0x72,0x75,0x63,0x74,0x20,0x4f,0x45,0x53,0x53,0x47,0x49,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x74,0x34,0x20,0x70,0x72,
    0x6f,0x6a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x52,0x41,0x59,0x53,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x53,0x54,0x45,0x50,0x53,0x3b,
    0x0a,0x7d,0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x4f,0x45,0x53,
    0x53,0x47,0x49,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x20,0x5f,0x32,0x32,0x32,0x3b,
    0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,
    0x72,0x32,0x44,0x20,0x4f,0x45,0x53,0x53,0x47,0x49,0x5f,0x74,0x65,0x78,0x74,0x75,
    0x72,0x65,0x5f,0x4f,0x45,0x53,0x53,0x47,0x49,0x5f,0x73,0x6d,0x70,0x3b,0x0a,0x75,
    0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,
    0x20,0x4f,0x45,0x53,0x53,0x47,0x49,0x5f,0x70,0x74,0x65,0x78,0x74,0x75,0x72,0x65,
    0x5f,0x4f,0x45,0x53,0x53,0x47,0x49,0x5f,0x73,0x6d,0x70,0x3b,0x0a,0x75,0x6e,0x69,
    0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x4f,
    0x45,0x53,0x53,0x47,0x49,0x5f,0x6e,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x4f,
    0x45,0x53,0x53,0x47,0x49,0x5f,0x73,0x6d,0x70,0x3b,0x0a,0x0a,0x6c,0x61,0x79,0x6f,
    0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,
    0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x75,0x76,0x3b,0x0a,0x6c,0x61,0x79,
    0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,
    0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,
    0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x20,0x51,0x49,
    0x53,0x51,0x52,0x54,0x28,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x78,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,0x39,0x20,0x3d,
    0x20,0x75,0x69,0x6e,0x74,0x42,0x69,0x74,0x73,0x54,0x6f,0x46,0x6c,0x6f,0x61,0x74,
    0x28,0x31,0x35,0x39,0x37,0x34,0x36,0x33,0x30,0x30,0x37,0x75,0x20,0x2d,0x20,0x28,
    0x66,0x6c,0x6f,0x61,0x74,0x42,0x69,0x74,0x73,0x54,0x6f,0x55,0x69,0x6e,0x74,0x28,
    0x5f,0x78,0x29,0x20,0x3e,0x3e,0x20,0x75,0x69,0x6e,0x74,0x28,0x31,0x29,0x29,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x5f,0x33,0x39,
    0x20,0x2a,0x20,0x28,0x31,0x2e,0x35,0x20,0x2d,0x20,0x28,0x28,0x28,0x30,0x2e,0x35,
    0x20,0x2a,0x20,0x5f,0x78,0x29,0x20,0x2a,0x20,0x5f,0x33,0x39,0x29,0x20,0x2a,0x20,
    0x5f,0x33,0x39,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x51,0x53,0x51,0x52,0x54,0x28,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x78,0x29,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x20,0x3d,0x20,0x5f,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,
    0x72,0x6e,0x20,0x5f,0x78,0x20,0x2a,0x20,0x51,0x49,0x53,0x51,0x52,0x54,0x28,0x70,
    0x61,0x72,0x61,0x6d,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x75,0x69,0x6e,0x74,0x20,0x70,
    0x63,0x67,0x28,0x75,0x69,0x6e,0x74,0x20,0x76,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x75,0x69,0x6e,0x74,0x20,0x5f,0x36,0x35,0x20,0x3d,0x20,0x28,0x76,0x20,0x2a,
    0x20,0x37,0x34,0x37,0x37,0x39,0x36,0x34,0x30,0x35,0x75,0x29,0x20,0x2b,0x20,0x32,
    0x38,0x39,0x31,0x33,0x33,0x36,0x34,0x35,0x33,0x75,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x75,0x69,0x6e,0x74,0x20,0x5f,0x37,0x37,0x20,0x3d,0x20,0x28,0x28,0x5f,0x36,0x35,
    0x20,0x3e,0x3e,0x20,0x28,0x28,0x5f,0x36,0x35,0x20,0x3e,0x3e,0x20,0x32,0x38,0x75,
    0x29,0x20,0x2b,0x20,0x34,0x75,0x29,0x29,0x20,0x5e,0x20,0x5f,0x36,0x35,0x29,0x20,
    0x2a,0x20,0x32,0x37,0x37,0x38,0x30,0x33,0x37,0x33,0x37,0x75,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x28,0x5f,0x37,0x37,0x20,0x3e,0x3e,
    0x20,0x32,0x32,0x75,0x29,0x20,0x5e,0x20,0x5f,0x37,0x37,0x3b,0x0a,0x7d,0x0a,0x0a,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x67,0x65,0x74,0x52,0x61,0x6e,0x64,0x6f,0x6d,0x28,
    0x76,0x65,0x63,0x32,0x20,0x70,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,
    0x6e,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x75,0x69,0x6e,0x74,0x28,
    0x70,0x2e,0x78,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x70,0x63,0x67,0x28,0x70,0x61,0x72,
    0x61,0x6d,0x29,0x20,0x2b,0x20,0x75,0x69,0x6e,0x74,0x28,0x70,0x2e,0x79,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x28,0x70,0x63,0x67,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x29,0x29,0x20,
    0x2a,0x20,0x32,0x2e,0x33,0x32,0x38,0x33,0x30,0x36,0x34,0x33,0x36,0x35,0x33,0x38,
    0x36,0x39,0x36,0x32,0x38,0x39,0x30,0x36,0x32,0x35,0x65,0x2d,0x31,0x30,0x3b,0x0a,
    0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x31,0x32,0x32,0x20,0x3d,
    0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x4f,0x45,0x53,0x53,0x47,0x49,0x5f,
    0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x4f,0x45,0x53,0x53,0x47,0x49,0x5f,0x73,
    0x6d,0x70,0x2c,0x20,0x75,0x76,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,
    0x34,0x20,0x5f,0x31,0x33,0x30,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,
    0x28,0x4f,0x45,0x53,0x53,0x47,0x49,0x5f,0x70,0x74,0x65,0x78,0x74,0x75,0x72,0x65,
    0x5f,0x4f,0x45,0x53,0x53,0x47,0x49,0x5f,0x73,0x6d,0x70,0x2c,0x20,0x75,0x76,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x31,0x33,0x31,0x20,
    0x3d,0x20,0x5f,0x31,0x33,0x30,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x64,0x6f,
    0x74,0x28,0x5f,0x31,0x33,0x31,0x2c,0x20,0x5f,0x31,0x33,0x31,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x51,0x53,0x51,0x52,0x54,0x28,0x70,0x61,0x72,
    0x61,0x6d,0x29,0x20,0x3c,0x20,0x30,0x2e,0x30,0x30,0x31,0x30,0x30,0x30,0x30,0x30,
    0x30,0x30,0x34,0x37,0x34,0x39,0x37,0x34,0x35,0x31,0x33,0x30,0x35,0x33,0x38,0x39,
    0x34,0x30,0x34,0x32,0x39,0x36,0x38,0x37,0x35,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,
    0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x31,0x32,0x32,0x2e,
    0x78,0x79,0x7a,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,
    0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x31,0x35,0x37,0x20,0x3d,
    0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x4f,0x45,0x53,0x53,0x47,0x49,0x5f,
    0x6e,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x4f,0x45,0x53,0x53,0x47,0x49,0x5f,
    0x73,0x6d,0x70,0x2c,0x20,0x75,0x76,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,
    0x63,0x33,0x20,0x5f,0x31,0x36,0x32,0x20,0x3d,0x20,0x28,0x5f,0x31,0x35,0x37,0x2e,
    0x78,0x79,0x7a,0x20,0x2a,0x20,0x32,0x2e,0x30,0x29,0x20,0x2d,0x20,0x76,0x65,0x63,
    0x33,0x28,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x62,0x76,0x65,0x63,
    0x33,0x20,0x5f,0x31,0x37,0x34,0x20,0x3d,0x20,0x62,0x76,0x65,0x63,0x33,0x28,0x61,
    0x62,0x73,0x28,0x5f,0x31,0x36,0x32,0x2e,0x7a,0x29,0x20,0x3c,0x20,0x30,0x2e,0x39,
    0x39,0x39,0x30,0x30,0x30,0x30,0x31,0x32,0x38,0x37,0x34,0x36,0x30,0x33,0x32,0x37,
    0x31,0x34,0x38,0x34,0x33,0x37,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,
    0x63,0x33,0x20,0x5f,0x31,0x37,0x39,0x20,0x3d,0x20,0x63,0x72,0x6f,0x73,0x73,0x28,
    0x76,0x65,0x63,0x33,0x28,0x5f,0x31,0x37,0x34,0x2e,0x78,0x20,0x3f,0x20,0x76,0x65,
    0x63,0x33,0x28,0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,
    0x29,0x2e,0x78,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x28,0x31,0x2e,0x30,0x2c,0x20,
    0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x29,0x2e,0x78,0x2c,0x20,0x5f,0x31,0x37,
    0x34,0x2e,0x79,0x20,0x3f,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,0x2c,0x20,
    0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x2e,0x79,0x20,0x3a,0x20,0x76,0x65,
    0x63,0x33,0x28,0x31,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,
    0x29,0x2e,0x79,0x2c,0x20,0x5f,0x31,0x37,0x34,0x2e,0x7a,0x20,0x3f,0x20,0x76,0x65,
    0x63,0x33,0x28,0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,
    0x29,0x2e,0x7a,0x20,0x3a,0x20,0x76,0x65,0x63,0x33,0x28,0x31,0x2e,0x30,0x2c,0x20,
    0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x29,0x2e,0x7a,0x29,0x2c,0x20,0x5f,0x31,
    0x36,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x74,0x33,0x20,0x5f,0x32,
    0x30,0x32,0x20,0x3d,0x20,0x6d,0x61,0x74,0x33,0x28,0x5f,0x31,0x37,0x39,0x2c,0x20,
    0x63,0x72,0x6f,0x73,0x73,0x28,0x5f,0x31,0x36,0x32,0x2c,0x20,0x5f,0x31,0x37,0x39,
    0x29,0x2c,0x20,0x5f,0x31,0x36,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,
    0x63,0x33,0x20,0x47,0x49,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x31,0x20,0x3d,0x20,0x28,0x28,0x75,0x76,0x20,0x2a,0x20,0x5f,0x31,0x33,
    0x30,0x2e,0x78,0x29,0x20,0x2a,0x20,0x5f,0x31,0x33,0x30,0x2e,0x79,0x29,0x20,0x2a,
    0x20,0x5f,0x31,0x33,0x30,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x5f,0x32,0x31,0x37,0x20,0x3d,0x20,0x67,0x65,0x74,0x52,0x61,0x6e,
    0x64,0x6f,0x6d,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x32,0x38,0x20,0x3d,0x20,0x31,
    0x2e,0x30,0x20,0x2f,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x32,0x32,0x32,0x2e,
    0x53,0x54,0x45,0x50,0x53,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,
    0x69,0x20,0x3d,0x20,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x68,
    0x69,0x74,0x73,0x20,0x3d,0x20,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,
    0x20,0x5f,0x32,0x34,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,
    0x3b,0x3b,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x5f,0x32,0x34,0x32,0x20,0x3d,0x20,0x5f,0x32,0x32,0x32,0x2e,0x52,0x41,
    0x59,0x53,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,
    0x69,0x20,0x3c,0x20,0x5f,0x32,0x34,0x32,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x76,0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x76,
    0x65,0x63,0x32,0x28,0x66,0x6c,0x6f,0x61,0x74,0x28,0x69,0x29,0x2c,0x20,0x5f,0x32,
    0x31,0x37,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x35,0x32,0x20,0x3d,0x20,0x36,0x2e,
    0x32,0x38,0x33,0x31,0x38,0x35,0x30,0x30,0x35,0x31,0x38,0x37,0x39,0x38,0x38,0x32,
    0x38,0x31,0x32,0x35,0x20,0x2a,0x20,0x67,0x65,0x74,0x52,0x61,0x6e,0x64,0x6f,0x6d,
    0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x33,0x20,0x3d,0x20,0x76,0x65,0x63,0x32,0x28,0x5f,0x32,0x31,0x37,0x2c,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x69,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,
    0x35,0x39,0x20,0x3d,0x20,0x67,0x65,0x74,0x52,0x61,0x6e,0x64,0x6f,0x6d,0x28,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x36,0x34,0x20,
    0x3d,0x20,0x31,0x2e,0x30,0x20,0x2d,0x20,0x28,0x5f,0x32,0x35,0x39,0x20,0x2a,0x20,
    0x5f,0x32,0x35,0x39,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,
    0x20,0x3d,0x20,0x5f,0x32,0x36,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x37,0x31,0x20,
    0x3d,0x20,0x5f,0x32,0x36,0x34,0x20,0x2a,0x20,0x51,0x49,0x53,0x51,0x52,0x54,0x28,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x32,0x38,0x36,0x20,
    0x3d,0x20,0x5f,0x32,0x30,0x32,0x20,0x2a,0x20,0x76,0x65,0x63,0x33,0x28,0x63,0x6f,
    0x73,0x28,0x5f,0x32,0x35,0x32,0x29,0x20,0x2a,0x20,0x5f,0x32,0x37,0x31,0x2c,0x20,
    0x73,0x69,0x6e,0x28,0x5f,0x32,0x35,0x32,0x29,0x20,0x2a,0x20,0x5f,0x32,0x37,0x31,
    0x2c,0x20,0x5f,0x32,0x35,0x39,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x69,0x6e,0x74,0x20,0x6a,0x20,
    0x3d,0x20,0x31,0x3b,0x20,0x6a,0x20,0x3c,0x3d,0x20,0x5f,0x32,0x32,0x32,0x2e,0x53,
    0x54,0x45,0x50,0x53,0x3b,0x20,0x6a,0x2b,0x2b,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,
    0x33,0x30,0x31,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x6a,0x29,0x20,0x2a,
    0x20,0x5f,0x32,0x32,0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x33,0x30,0x39,
    0x20,0x3d,0x20,0x5f,0x31,0x33,0x31,0x20,0x2b,0x20,0x28,0x5f,0x32,0x38,0x36,0x20,
    0x2a,0x20,0x28,0x5f,0x33,0x30,0x31,0x20,0x2a,0x20,0x30,0x2e,0x32,0x35,0x29,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x33,0x32,0x30,0x20,0x3d,0x20,0x5f,0x32,
    0x32,0x32,0x2e,0x70,0x72,0x6f,0x6a,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,
    0x33,0x30,0x39,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,
    0x5f,0x33,0x33,0x31,0x20,0x3d,0x20,0x28,0x28,0x5f,0x33,0x32,0x30,0x2e,0x78,0x79,
    0x20,0x2f,0x20,0x76,0x65,0x63,0x32,0x28,0x5f,0x33,0x32,0x30,0x2e,0x77,0x29,0x29,
    0x20,0x2a,0x20,0x30,0x2e,0x35,0x29,0x20,0x2b,0x20,0x76,0x65,0x63,0x32,0x28,0x30,
    0x2e,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x33,0x33,0x36,0x20,0x3d,
    0x20,0x61,0x6e,0x79,0x28,0x6c,0x65,0x73,0x73,0x54,0x68,0x61,0x6e,0x28,0x5f,0x33,
    0x33,0x31,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x30,0x2e,0x30,0x29,0x29,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x62,0x6f,0x6f,0x6c,0x20,0x5f,0x33,0x34,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,
    0x21,0x5f,0x33,0x33,0x36,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x33,0x34,
    0x34,0x20,0x3d,0x20,0x61,0x6e,0x79,0x28,0x67,0x72,0x65,0x61,0x74,0x65,0x72,0x54,
    0x68,0x61,0x6e,0x28,0x5f,0x33,0x33,0x31,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x31,
    0x2e,0x30,0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x5f,0x33,0x34,0x34,0x20,0x3d,0x20,0x5f,0x33,0x33,0x36,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x33,0x34,0x34,0x29,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x63,0x6f,0x6e,0x74,0x69,0x6e,0x75,0x65,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,
    0x65,0x63,0x34,0x20,0x5f,0x33,0x35,0x33,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,
    0x72,0x65,0x28,0x4f,0x45,0x53,0x53,0x47,0x49,0x5f,0x70,0x74,0x65,0x78,0x74,0x75,
    0x72,0x65,0x5f,0x4f,0x45,0x53,0x53,0x47,0x49,0x5f,0x73,0x6d,0x70,0x2c,0x20,0x5f,
    0x33,0x33,0x31,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x33,0x35,0x34,0x20,
    0x3d,0x20,0x5f,0x33,0x35,0x33,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x20,0x3d,0x20,0x64,0x6f,0x74,0x28,
    0x5f,0x33,0x35,0x34,0x2c,0x20,0x5f,0x33,0x35,0x34,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,
    0x28,0x51,0x53,0x51,0x52,0x54,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x29,0x20,
    0x3c,0x20,0x30,0x2e,0x30,0x30,0x31,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x34,0x37,
    0x34,0x39,0x37,0x34,0x35,0x31,0x33,0x30,0x35,0x33,0x38,0x39,0x34,0x30,0x34,0x32,
    0x39,0x36,0x38,0x37,0x35,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x6f,0x6e,
    0x74,0x69,0x6e,0x75,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x33,0x35,
    0x33,0x2e,0x7a,0x20,0x3c,0x20,0x28,0x5f,0x33,0x30,0x39,0x2e,0x7a,0x20,0x2d,0x20,
    0x30,0x2e,0x30,0x35,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x37,0x34,0x35,0x30,0x35,
    0x38,0x30,0x35,0x39,0x36,0x39,0x32,0x33,0x38,0x32,0x38,0x31,0x32,0x35,0x29,0x29,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x47,0x49,0x20,0x2b,0x3d,0x20,0x28,0x74,0x65,
    0x78,0x74,0x75,0x72,0x65,0x28,0x4f,0x45,0x53,0x53,0x47,0x49,0x5f,0x74,0x65,0x78,
    0x74,0x75,0x72,0x65,0x5f,0x4f,0x45,0x53,0x53,0x47,0x49,0x5f,0x73,0x6d,0x70,0x2c,
    0x20,0x5f,0x33,0x33,0x31,0x29,0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x28,0x6d,0x61,
    0x78,0x28,0x64,0x6f,0x74,0x28,0x5f,0x31,0x36,0x32,0x2c,0x20,0x5f,0x32,0x38,0x36,
    0x29,0x2c,0x20,0x30,0x2e,0x30,0x29,0x20,0x2a,0x20,0x28,0x31,0x2e,0x30,0x20,0x2d,
    0x20,0x5f,0x33,0x30,0x31,0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,
    0x74,0x73,0x2b,0x2b,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x62,0x72,0x65,0x61,0x6b,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x2b,0x2b,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x6f,
    0x6e,0x74,0x69,0x6e,0x75,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x62,0x72,0x65,0x61,0x6b,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,
    0x76,0x65,0x63,0x33,0x20,0x5f,0x34,0x30,0x31,0x20,0x3d,0x20,0x47,0x49,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,0x30,0x34,0x20,0x3d,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x32,0x34,0x32,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x34,0x30,0x37,0x20,0x3d,0x20,0x28,0x5f,
    0x34,0x30,0x31,0x20,0x2f,0x20,0x76,0x65,0x63,0x33,0x28,0x5f,0x34,0x30,0x34,0x29,
    0x29,0x20,0x2a,0x20,0x32,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x47,0x49,0x20,
    0x3d,0x20,0x5f,0x34,0x30,0x37,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x28,0x5f,
    0x31,0x32,0x32,0x2e,0x78,0x79,0x7a,0x20,0x2b,0x20,0x5f,0x34,0x30,0x37,0x29,0x20,
    0x2a,0x20,0x28,0x66,0x6c,0x6f,0x61,0x74,0x28,0x68,0x69,0x74,0x73,0x29,0x20,0x2f,
    0x20,0x5f,0x34,0x30,0x34,0x29,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,
    0x0a,0x00,
};
#endif
static inline const sg_shader_desc* OESSGI_shader_desc(sg_backend backend) {
    #if defined(SOKOL_GLCORE)
    if (backend == SG_BACKEND_GLCORE) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vertex_func.source = (const char*)vs_OESSGI_source_glsl410;
            desc.vertex_func.entry = "main";
            desc.fragment_func.source = (const char*)fs_OESSGI_source_glsl410;
            desc.fragment_func.entry = "main";
            desc.attrs[0].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[0].glsl_name = "OESSGI_position";
            desc.attrs[1].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[1].glsl_name = "OESSGI_texcoord";
            desc.uniform_blocks[4].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.uniform_blocks[4].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[4].size = 80;
            desc.uniform_blocks[4].glsl_uniforms[0].type = SG_UNIFORMTYPE_MAT4;
            desc.uniform_blocks[4].glsl_uniforms[0].array_count = 0;
            desc.uniform_blocks[4].glsl_uniforms[0].glsl_name = "_222.proj";
            desc.uniform_blocks[4].glsl_uniforms[1].type = SG_UNIFORMTYPE_INT;
            desc.uniform_blocks[4].glsl_uniforms[1].array_count = 0;
            desc.uniform_blocks[4].glsl_uniforms[1].glsl_name = "_222.RAYS";
            desc.uniform_blocks[4].glsl_uniforms[2].type = SG_UNIFORMTYPE_INT;
            desc.uniform_blocks[4].glsl_uniforms[2].array_count = 0;
            desc.uniform_blocks[4].glsl_uniforms[2].glsl_name = "_222.STEPS";
            desc.views[0].texture.stage = SG_SHADERSTAGE_FRAGMENT;
            desc.views[0].texture.image_type = SG_IMAGETYPE_2D;
            desc.views[0].texture.sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.views[0].texture.multisampled = false;
            desc.views[2].texture.stage = SG_SHADERSTAGE_FRAGMENT;
            desc.views[2].texture.image_type = SG_IMAGETYPE_2D;
            desc.views[2].texture.sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.views[2].texture.multisampled = false;
            desc.views[3].texture.stage = SG_SHADERSTAGE_FRAGMENT;
            desc.views[3].texture.image_type = SG_IMAGETYPE_2D;
            desc.views[3].texture.sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.views[3].texture.multisampled = false;
            desc.samplers[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.texture_sampler_pairs[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.texture_sampler_pairs[0].view_slot = 0;
            desc.texture_sampler_pairs[0].sampler_slot = 0;
            desc.texture_sampler_pairs[0].glsl_name = "OESSGI_texture_OESSGI_smp";
            desc.texture_sampler_pairs[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.texture_sampler_pairs[1].view_slot = 3;
            desc.texture_sampler_pairs[1].sampler_slot = 0;
            desc.texture_sampler_pairs[1].glsl_name = "OESSGI_ptexture_OESSGI_smp";
            desc.texture_sampler_pairs[2].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.texture_sampler_pairs[2].view_slot = 2;
            desc.texture_sampler_pairs[2].sampler_slot = 0;
            desc.texture_sampler_pairs[2].glsl_name = "OESSGI_ntexture_OESSGI_smp";
            desc.label = "OESSGI_shader";
        }
        return &desc;
    }
    #endif /* SOKOL_GLCORE */
    return 0;
}
