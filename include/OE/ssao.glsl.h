#pragma once
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Cmdline:
        sokol-shdc --input shaders/ssao.glsl --output include/OE/ssao.glsl.h --format sokol --slang glsl410 --ifdef

    Overview:
    =========
    Shader program: 'OESSAO':
        Get shader desc: OESSAO_shader_desc(sg_query_backend());
        Vertex Shader: vs_OESSAO
        Fragment Shader: fs_OESSAO
        Attributes:
            ATTR_OESSAO_OESSAO_position => 0
            ATTR_OESSAO_OESSAO_texcoord => 1
    Bindings:
        Uniform block 'OESSAO_params':
            C struct: OESSAO_params_t
            Bind slot: UB_OESSAO_params => 4
        Image 'OESSAO_texture':
            Image type: SG_IMAGETYPE_2D
            Sample type: SG_IMAGESAMPLETYPE_FLOAT
            Multisampled: false
            Bind slot: IMG_OESSAO_texture => 0
        Image 'OESSAO_ptexture':
            Image type: SG_IMAGETYPE_2D
            Sample type: SG_IMAGESAMPLETYPE_FLOAT
            Multisampled: false
            Bind slot: IMG_OESSAO_ptexture => 3
        Image 'OESSAO_ntexture':
            Image type: SG_IMAGETYPE_2D
            Sample type: SG_IMAGESAMPLETYPE_FLOAT
            Multisampled: false
            Bind slot: IMG_OESSAO_ntexture => 2
        Image 'OESSAO_dtexture':
            Image type: SG_IMAGETYPE_2D
            Sample type: SG_IMAGESAMPLETYPE_FLOAT
            Multisampled: false
            Bind slot: IMG_OESSAO_dtexture => 1
        Sampler 'OESSAO_smp':
            Type: SG_SAMPLERTYPE_FILTERING
            Bind slot: SMP_OESSAO_smp => 0
*/
#if !defined(SOKOL_GFX_INCLUDED)
#error "Please include sokol_gfx.h before ssao.glsl.h"
#endif
#if !defined(SOKOL_SHDC_ALIGN)
#if defined(_MSC_VER)
#define SOKOL_SHDC_ALIGN(a) __declspec(align(a))
#else
#define SOKOL_SHDC_ALIGN(a) __attribute__((aligned(a)))
#endif
#endif
#define ATTR_OESSAO_OESSAO_position (0)
#define ATTR_OESSAO_OESSAO_texcoord (1)
#define UB_OESSAO_params (4)
#define IMG_OESSAO_texture (0)
#define IMG_OESSAO_ptexture (3)
#define IMG_OESSAO_ntexture (2)
#define IMG_OESSAO_dtexture (1)
#define SMP_OESSAO_smp (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct OESSAO_params_t {
    vec4 kernel[128];
    mat4x4 proj;
} OESSAO_params_t;
#pragma pack(pop)
/*
    #version 410

    layout(location = 0) out vec2 uv;
    layout(location = 1) in vec2 OESSAO_texcoord;
    layout(location = 0) in vec2 OESSAO_position;

    void main()
    {
        uv = OESSAO_texcoord;
        gl_Position = vec4(OESSAO_position, 0.0, 1.0);
    }

*/
#if defined(SOKOL_GLCORE)
static const uint8_t vs_OESSAO_source_glsl410[236] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x31,0x30,0x0a,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x75,0x76,0x3b,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x4f,0x45,0x53,
    0x53,0x41,0x4f,0x5f,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x4f,0x45,0x53,0x53,0x41,
    0x4f,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x0a,0x76,0x6f,0x69,
    0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x75,
    0x76,0x20,0x3d,0x20,0x4f,0x45,0x53,0x53,0x41,0x4f,0x5f,0x74,0x65,0x78,0x63,0x6f,
    0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x4f,0x45,0x53,0x53,
    0x41,0x4f,0x5f,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x30,0x2e,0x30,
    0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
#endif
/*
    #version 410

    vec4 _300;

    uniform vec4 OESSAO_params[132];
    uniform sampler2D OESSAO_texture_OESSAO_smp;
    uniform sampler2D OESSAO_ptexture_OESSAO_smp;
    uniform sampler2D OESSAO_ntexture_OESSAO_smp;
    uniform sampler2D OESSAO_dtexture_OESSAO_smp;

    layout(location = 0) in vec2 uv;
    layout(location = 0) out vec4 frag_color;

    float hash12(vec2 p)
    {
        vec3 _26 = fract(p.xyx * vec3(0.103100001811981201171875, 0.113689996302127838134765625, 0.13786999881267547607421875));
        vec3 _36 = _26 + vec3(dot(_26, _26.yzx + vec3(19.1900005340576171875)));
        return fract((_36.x + _36.y) * _36.z);
    }

    float getRandom(vec2 uv_1)
    {
        vec2 param = uv_1 * 100.0;
        return normalize(hash12(param) * 6.280000209808349609375);
    }

    void main()
    {
        vec4 _86 = texture(OESSAO_ptexture_OESSAO_smp, uv);
        vec3 _87 = _86.xyz;
        vec4 _94 = texture(OESSAO_ntexture_OESSAO_smp, uv);
        vec3 _95 = _94.xyz;
        vec2 param = uv;
        vec2 _110 = _86.xy;
        vec2 param_1 = _110;
        vec2 param_2 = uv;
        vec2 param_3 = _110;
        vec2 param_4 = uv;
        float _127 = _94.x;
        vec2 param_5 = vec2(_127, _94.z);
        vec3 _140 = normalize(cross(vec3(normalize(getRandom(param) * getRandom(param_1)), normalize(getRandom(param_2) * getRandom(param_3)), normalize(getRandom(param_4) * getRandom(param_5))), _95));
        mat3 _165 = mat3(_140, cross(_95, _140), vec3(_127, _94.yz));
        float AO = 0.0;
        for (int i = 0; i < 128; i++)
        {
            vec3 _198 = _87 + ((_165 * OESSAO_params[i * 1 + 0].xyz) * 0.5);
            vec4 _209 = mat4(OESSAO_params[128], OESSAO_params[129], OESSAO_params[130], OESSAO_params[131]) * vec4(_198, 1.0);
            vec3 _216 = _209.xyz / vec3(_209.w);
            vec4 _279;
            _279.x = _216.x;
            _279.y = _216.y;
            vec3 _227 = (_279.xyz * 0.5) + vec3(0.5);
            vec4 _285;
            _285.x = _227.x;
            _285.y = _227.y;
            vec4 _240 = texture(OESSAO_dtexture_OESSAO_smp, _285.xy);
            float _241 = _240.z;
            AO += (float(_241 >= (_198.z + 0.0500000007450580596923828125)) * smoothstep(0.0, 1.0, 0.5 / abs(_86.z - _241)));
        }
        float _263 = AO;
        float _266 = 1.0 - (_263 * 0.0078125);
        AO = _266;
        frag_color = vec4(_266) * texture(OESSAO_texture_OESSAO_smp, uv);
        frag_color = vec4(1.0, 0.5, 0.300000011920928955078125, 1.0);
    }

*/
#if defined(SOKOL_GLCORE)
static const uint8_t fs_OESSAO_source_glsl410[2290] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x31,0x30,0x0a,0x0a,0x76,0x65,
    0x63,0x34,0x20,0x5f,0x33,0x30,0x30,0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,
    0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x4f,0x45,0x53,0x53,0x41,0x4f,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x31,0x33,0x32,0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,
    0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x4f,0x45,0x53,
    0x53,0x41,0x4f,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x4f,0x45,0x53,0x53,
    0x41,0x4f,0x5f,0x73,0x6d,0x70,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,
    0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x4f,0x45,0x53,0x53,0x41,0x4f,
    0x5f,0x70,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x4f,0x45,0x53,0x53,0x41,0x4f,
    0x5f,0x73,0x6d,0x70,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,
    0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x4f,0x45,0x53,0x53,0x41,0x4f,0x5f,0x6e,
    0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x4f,0x45,0x53,0x53,0x41,0x4f,0x5f,0x73,
    0x6d,0x70,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,
    0x6c,0x65,0x72,0x32,0x44,0x20,0x4f,0x45,0x53,0x53,0x41,0x4f,0x5f,0x64,0x74,0x65,
    0x78,0x74,0x75,0x72,0x65,0x5f,0x4f,0x45,0x53,0x53,0x41,0x4f,0x5f,0x73,0x6d,0x70,
    0x3b,0x0a,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,
    0x75,0x76,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,
    0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,
    0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x68,0x61,0x73,0x68,0x31,0x32,0x28,0x76,0x65,0x63,0x32,
    0x20,0x70,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,
    0x32,0x36,0x20,0x3d,0x20,0x66,0x72,0x61,0x63,0x74,0x28,0x70,0x2e,0x78,0x79,0x78,
    0x20,0x2a,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x31,0x30,0x33,0x31,0x30,0x30,
    0x30,0x30,0x31,0x38,0x31,0x31,0x39,0x38,0x31,0x32,0x30,0x31,0x31,0x37,0x31,0x38,
    0x37,0x35,0x2c,0x20,0x30,0x2e,0x31,0x31,0x33,0x36,0x38,0x39,0x39,0x39,0x36,0x33,
    0x30,0x32,0x31,0x32,0x37,0x38,0x33,0x38,0x31,0x33,0x34,0x37,0x36,0x35,0x36,0x32,
    0x35,0x2c,0x20,0x30,0x2e,0x31,0x33,0x37,0x38,0x36,0x39,0x39,0x39,0x38,0x38,0x31,
    0x32,0x36,0x37,0x35,0x34,0x37,0x36,0x30,0x37,0x34,0x32,0x31,0x38,0x37,0x35,0x29,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x33,0x36,0x20,
    0x3d,0x20,0x5f,0x32,0x36,0x20,0x2b,0x20,0x76,0x65,0x63,0x33,0x28,0x64,0x6f,0x74,
    0x28,0x5f,0x32,0x36,0x2c,0x20,0x5f,0x32,0x36,0x2e,0x79,0x7a,0x78,0x20,0x2b,0x20,
    0x76,0x65,0x63,0x33,0x28,0x31,0x39,0x2e,0x31,0x39,0x30,0x30,0x30,0x30,0x35,0x33,
    0x34,0x30,0x35,0x37,0x36,0x31,0x37,0x31,0x38,0x37,0x35,0x29,0x29,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x66,0x72,0x61,0x63,0x74,
    0x28,0x28,0x5f,0x33,0x36,0x2e,0x78,0x20,0x2b,0x20,0x5f,0x33,0x36,0x2e,0x79,0x29,
    0x20,0x2a,0x20,0x5f,0x33,0x36,0x2e,0x7a,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x67,0x65,0x74,0x52,0x61,0x6e,0x64,0x6f,0x6d,0x28,0x76,0x65,
    0x63,0x32,0x20,0x75,0x76,0x5f,0x31,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,
    0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x75,0x76,0x5f,0x31,
    0x20,0x2a,0x20,0x31,0x30,0x30,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,
    0x74,0x75,0x72,0x6e,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x68,
    0x61,0x73,0x68,0x31,0x32,0x28,0x70,0x61,0x72,0x61,0x6d,0x29,0x20,0x2a,0x20,0x36,
    0x2e,0x32,0x38,0x30,0x30,0x30,0x30,0x32,0x30,0x39,0x38,0x30,0x38,0x33,0x34,0x39,
    0x36,0x30,0x39,0x33,0x37,0x35,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,
    0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,
    0x63,0x34,0x20,0x5f,0x38,0x36,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,
    0x28,0x4f,0x45,0x53,0x53,0x41,0x4f,0x5f,0x70,0x74,0x65,0x78,0x74,0x75,0x72,0x65,
    0x5f,0x4f,0x45,0x53,0x53,0x41,0x4f,0x5f,0x73,0x6d,0x70,0x2c,0x20,0x75,0x76,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x38,0x37,0x20,0x3d,
    0x20,0x5f,0x38,0x36,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,
    0x63,0x34,0x20,0x5f,0x39,0x34,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,
    0x28,0x4f,0x45,0x53,0x53,0x41,0x4f,0x5f,0x6e,0x74,0x65,0x78,0x74,0x75,0x72,0x65,
    0x5f,0x4f,0x45,0x53,0x53,0x41,0x4f,0x5f,0x73,0x6d,0x70,0x2c,0x20,0x75,0x76,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x39,0x35,0x20,0x3d,
    0x20,0x5f,0x39,0x34,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,
    0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x75,0x76,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x31,0x31,0x30,0x20,0x3d,0x20,0x5f,
    0x38,0x36,0x2e,0x78,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x5f,0x31,0x31,0x30,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,
    0x20,0x3d,0x20,0x75,0x76,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x5f,0x31,0x31,0x30,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,
    0x20,0x3d,0x20,0x75,0x76,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x5f,0x31,0x32,0x37,0x20,0x3d,0x20,0x5f,0x39,0x34,0x2e,0x78,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x20,
    0x3d,0x20,0x76,0x65,0x63,0x32,0x28,0x5f,0x31,0x32,0x37,0x2c,0x20,0x5f,0x39,0x34,
    0x2e,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x31,
    0x34,0x30,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x63,
    0x72,0x6f,0x73,0x73,0x28,0x76,0x65,0x63,0x33,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x69,0x7a,0x65,0x28,0x67,0x65,0x74,0x52,0x61,0x6e,0x64,0x6f,0x6d,0x28,0x70,0x61,
    0x72,0x61,0x6d,0x29,0x20,0x2a,0x20,0x67,0x65,0x74,0x52,0x61,0x6e,0x64,0x6f,0x6d,
    0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x29,0x29,0x2c,0x20,0x6e,0x6f,0x72,0x6d,
    0x61,0x6c,0x69,0x7a,0x65,0x28,0x67,0x65,0x74,0x52,0x61,0x6e,0x64,0x6f,0x6d,0x28,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x29,0x20,0x2a,0x20,0x67,0x65,0x74,0x52,0x61,
    0x6e,0x64,0x6f,0x6d,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x29,0x29,0x2c,0x20,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x67,0x65,0x74,0x52,0x61,0x6e,
    0x64,0x6f,0x6d,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x29,0x20,0x2a,0x20,0x67,
    0x65,0x74,0x52,0x61,0x6e,0x64,0x6f,0x6d,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,
    0x29,0x29,0x29,0x2c,0x20,0x5f,0x39,0x35,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x6d,0x61,0x74,0x33,0x20,0x5f,0x31,0x36,0x35,0x20,0x3d,0x20,0x6d,0x61,0x74,0x33,
    0x28,0x5f,0x31,0x34,0x30,0x2c,0x20,0x63,0x72,0x6f,0x73,0x73,0x28,0x5f,0x39,0x35,
    0x2c,0x20,0x5f,0x31,0x34,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x5f,0x31,
    0x32,0x37,0x2c,0x20,0x5f,0x39,0x34,0x2e,0x79,0x7a,0x29,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x41,0x4f,0x20,0x3d,0x20,0x30,0x2e,0x30,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x69,0x6e,0x74,0x20,0x69,
    0x20,0x3d,0x20,0x30,0x3b,0x20,0x69,0x20,0x3c,0x20,0x31,0x32,0x38,0x3b,0x20,0x69,
    0x2b,0x2b,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x31,0x39,0x38,0x20,0x3d,0x20,0x5f,0x38,
    0x37,0x20,0x2b,0x20,0x28,0x28,0x5f,0x31,0x36,0x35,0x20,0x2a,0x20,0x4f,0x45,0x53,
    0x53,0x41,0x4f,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x69,0x20,0x2a,0x20,0x31,
    0x20,0x2b,0x20,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x29,0x20,0x2a,0x20,0x30,0x2e,0x35,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,
    0x5f,0x32,0x30,0x39,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x4f,0x45,0x53,0x53,
    0x41,0x4f,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x32,0x38,0x5d,0x2c,0x20,
    0x4f,0x45,0x53,0x53,0x41,0x4f,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x32,
    0x39,0x5d,0x2c,0x20,0x4f,0x45,0x53,0x53,0x41,0x4f,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x31,0x33,0x30,0x5d,0x2c,0x20,0x4f,0x45,0x53,0x53,0x41,0x4f,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x33,0x31,0x5d,0x29,0x20,0x2a,0x20,0x76,0x65,
    0x63,0x34,0x28,0x5f,0x31,0x39,0x38,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x32,0x31,0x36,
    0x20,0x3d,0x20,0x5f,0x32,0x30,0x39,0x2e,0x78,0x79,0x7a,0x20,0x2f,0x20,0x76,0x65,
    0x63,0x33,0x28,0x5f,0x32,0x30,0x39,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x32,0x37,0x39,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x32,0x37,0x39,0x2e,0x78,0x20,0x3d,0x20,
    0x5f,0x32,0x31,0x36,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x5f,0x32,0x37,0x39,0x2e,0x79,0x20,0x3d,0x20,0x5f,0x32,0x31,0x36,0x2e,0x79,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x32,
    0x32,0x37,0x20,0x3d,0x20,0x28,0x5f,0x32,0x37,0x39,0x2e,0x78,0x79,0x7a,0x20,0x2a,
    0x20,0x30,0x2e,0x35,0x29,0x20,0x2b,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x35,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,
    0x5f,0x32,0x38,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x32,
    0x38,0x35,0x2e,0x78,0x20,0x3d,0x20,0x5f,0x32,0x32,0x37,0x2e,0x78,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x32,0x38,0x35,0x2e,0x79,0x20,0x3d,0x20,
    0x5f,0x32,0x32,0x37,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x76,0x65,0x63,0x34,0x20,0x5f,0x32,0x34,0x30,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,
    0x75,0x72,0x65,0x28,0x4f,0x45,0x53,0x53,0x41,0x4f,0x5f,0x64,0x74,0x65,0x78,0x74,
    0x75,0x72,0x65,0x5f,0x4f,0x45,0x53,0x53,0x41,0x4f,0x5f,0x73,0x6d,0x70,0x2c,0x20,
    0x5f,0x32,0x38,0x35,0x2e,0x78,0x79,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x34,0x31,0x20,0x3d,0x20,0x5f,
    0x32,0x34,0x30,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x41,
    0x4f,0x20,0x2b,0x3d,0x20,0x28,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x32,0x34,0x31,
    0x20,0x3e,0x3d,0x20,0x28,0x5f,0x31,0x39,0x38,0x2e,0x7a,0x20,0x2b,0x20,0x30,0x2e,
    0x30,0x35,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x37,0x34,0x35,0x30,0x35,0x38,0x30,
    0x35,0x39,0x36,0x39,0x32,0x33,0x38,0x32,0x38,0x31,0x32,0x35,0x29,0x29,0x20,0x2a,
    0x20,0x73,0x6d,0x6f,0x6f,0x74,0x68,0x73,0x74,0x65,0x70,0x28,0x30,0x2e,0x30,0x2c,
    0x20,0x31,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x35,0x20,0x2f,0x20,0x61,0x62,0x73,0x28,
    0x5f,0x38,0x36,0x2e,0x7a,0x20,0x2d,0x20,0x5f,0x32,0x34,0x31,0x29,0x29,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x5f,0x32,0x36,0x33,0x20,0x3d,0x20,0x41,0x4f,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x36,0x36,0x20,0x3d,0x20,0x31,0x2e,0x30,
    0x20,0x2d,0x20,0x28,0x5f,0x32,0x36,0x33,0x20,0x2a,0x20,0x30,0x2e,0x30,0x30,0x37,
    0x38,0x31,0x32,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x41,0x4f,0x20,0x3d,0x20,
    0x5f,0x32,0x36,0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,
    0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x32,0x36,0x36,
    0x29,0x20,0x2a,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x4f,0x45,0x53,0x53,
    0x41,0x4f,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x4f,0x45,0x53,0x53,0x41,
    0x4f,0x5f,0x73,0x6d,0x70,0x2c,0x20,0x75,0x76,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,
    0x34,0x28,0x31,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x35,0x2c,0x20,0x30,0x2e,0x33,0x30,
    0x30,0x30,0x30,0x30,0x30,0x31,0x31,0x39,0x32,0x30,0x39,0x32,0x38,0x39,0x35,0x35,
    0x30,0x37,0x38,0x31,0x32,0x35,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,
    0x0a,0x00,
};
#endif
static inline const sg_shader_desc* OESSAO_shader_desc(sg_backend backend) {
    #if defined(SOKOL_GLCORE)
    if (backend == SG_BACKEND_GLCORE) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vertex_func.source = (const char*)vs_OESSAO_source_glsl410;
            desc.vertex_func.entry = "main";
            desc.fragment_func.source = (const char*)fs_OESSAO_source_glsl410;
            desc.fragment_func.entry = "main";
            desc.attrs[0].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[0].glsl_name = "OESSAO_position";
            desc.attrs[1].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[1].glsl_name = "OESSAO_texcoord";
            desc.uniform_blocks[4].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.uniform_blocks[4].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[4].size = 2112;
            desc.uniform_blocks[4].glsl_uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.uniform_blocks[4].glsl_uniforms[0].array_count = 132;
            desc.uniform_blocks[4].glsl_uniforms[0].glsl_name = "OESSAO_params";
            desc.images[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[0].image_type = SG_IMAGETYPE_2D;
            desc.images[0].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[0].multisampled = false;
            desc.images[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[1].image_type = SG_IMAGETYPE_2D;
            desc.images[1].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[1].multisampled = false;
            desc.images[2].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[2].image_type = SG_IMAGETYPE_2D;
            desc.images[2].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[2].multisampled = false;
            desc.images[3].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.images[3].image_type = SG_IMAGETYPE_2D;
            desc.images[3].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.images[3].multisampled = false;
            desc.samplers[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.image_sampler_pairs[0].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[0].image_slot = 0;
            desc.image_sampler_pairs[0].sampler_slot = 0;
            desc.image_sampler_pairs[0].glsl_name = "OESSAO_texture_OESSAO_smp";
            desc.image_sampler_pairs[1].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[1].image_slot = 3;
            desc.image_sampler_pairs[1].sampler_slot = 0;
            desc.image_sampler_pairs[1].glsl_name = "OESSAO_ptexture_OESSAO_smp";
            desc.image_sampler_pairs[2].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[2].image_slot = 2;
            desc.image_sampler_pairs[2].sampler_slot = 0;
            desc.image_sampler_pairs[2].glsl_name = "OESSAO_ntexture_OESSAO_smp";
            desc.image_sampler_pairs[3].stage = SG_SHADERSTAGE_FRAGMENT;
            desc.image_sampler_pairs[3].image_slot = 1;
            desc.image_sampler_pairs[3].sampler_slot = 0;
            desc.image_sampler_pairs[3].glsl_name = "OESSAO_dtexture_OESSAO_smp";
            desc.label = "OESSAO_shader";
        }
        return &desc;
    }
    #endif /* SOKOL_GLCORE */
    return 0;
}
